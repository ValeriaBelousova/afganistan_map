{"version":3,"sources":["reducers/layers.ts","reducers/index.ts","store.tsx","components/Toolbox/TEST/actions/index.ts","components/Toolbox/Cards/Radar/radarActions/changeZoom.ts","components/Toolbox/Cards/Basemap/basemapActions/levelChoose.ts","components/Toolbox/TEST/Afganistan_Layer.jsx","components/Toolbox/TEST/Icon.jsx","components/Toolbox/TEST/Icon_red.jsx","components/Toolbox/TEST/Icon_black.jsx","components/Toolbox/TEST/Icon_blue.jsx","components/Toolbox/TEST/Afganistan_Map.tsx","components/Toolbox/Tools/toolAction/actionTool.ts","components/Toolbox/TEST/actionTest/actionStatus_Date.ts","components/Toolbox/Cards/Radar/radarActions/changeCenter.ts","components/Toolbox/TEST/Afganistan_Timeline.tsx","components/Toolbox/TEST/AfganistanToolbox.tsx","components/map_afganistan.tsx","App.tsx","index.tsx"],"names":["INITIAL_STATE","id","zoom","center","style","bounds","polygonsArr","polygons","zoom_change","area","cellsize","hour","minute","period","rainviewer","overmap","extent","downloadChecked","value","ratio","scale","level","level_name","export_size","seqChecked","name","om","satellite","url","site","om_layers","temp_lyr","toolChange","vybory_lyr","data_type","colors","csv_om","excel","dataset_id","atd_div","visible","status_date","visible_poly","visible_poi","M10","M05","M01","M500","M200","allReducers","combineReducers","layers","state","action","console","log","type","map","l","payload","layerBounds","shapes","checkboxChecked","downloadCheckedButton","areaChecked","cellsizeChecked","hourChecked","minuteChecked","periodChecked","styleChecked","valueChecked","scaleChecked","levelChecked","addSatellite","omChoose","shapefileName","urlChange","downloadFromSite","lyrAdd","colorChecked","store","createStore","currentbounds","actionZoom","newzoom","actionLevel","Afganistan_Layer","props","myStyle","f","color","weight","fillOpacity","fillColor","properties","neutralStyle","data","FeatureGroup","this","GeoJSON","Popup","Table","striped","bordered","hover","name_1","name_2","objectid","status","fetchData","setState","fetch","then","r","json","features","error","React","Component","iconPerson","L","Icon","iconUrl","iconRetinaUrl","iconAnchor","Point","popupAnchor","shadowUrl","shadowSize","shadowAnchor","iconSize","className","icon_red","icon_black","icon_blue","connect","dispatch","bindActionCreators","addBounds","zoomChange","setLevel","icon","Default","imagePath","useRef","additionalLyr","Map","minZoom","maxZoom","onViewportChange","e","WMSTileLayer","transparent","format","Marker","position","Tooltip","offset","opacity","permanent","Card","width","Img","variant","src","Body","Title","Text","Button","href","target","actionTool","tools","actionStatus_Date","actionCenter","newcenter","setTool","setStatus_Date","setZoom","setCenter","click_li","onClick","useState","document","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ba539f75.chunk.js","sourcesContent":["const INITIAL_STATE = [\r\n    {\r\n        id: 'map',\r\n        zoom: 4,\r\n        center: [34.532780, 69.165830],\r\n        style: 'https://api.mapbox.com/styles/v1/valeriabelousova/ckko1s46x69o217o2qi6rtrg2/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoidmFsZXJpYWJlbG91c292YSIsImEiOiJjanBmMmt0c2cwNjQyM3FsZ2gzY2dvemNvIn0.skr82NeiNVFPUi-zxKKqiw',\r\n        bounds: [],\r\n        polygonsArr: {},\r\n        polygons: [],\r\n        zoom_change: false,\r\n    },\r\n    {\r\n        id: 'radar',\r\n        area: 'etr',\r\n        cellsize: 20,\r\n        hour: 9,\r\n        minute: 0,\r\n        period: 1,\r\n        rainviewer: false,\r\n        overmap: false,\r\n        extent: [[28.49, -16.08], [77.5, 110.06]],\r\n        downloadChecked: false,\r\n    },\r\n    {\r\n        id: 'gismeteo',\r\n        area: 'mo',\r\n        extent: false,\r\n        downloadChecked: false,\r\n    },\r\n    {\r\n        id: 'corona',\r\n        area: 'rus',\r\n        style: 'rik',\r\n        value: 'sick',\r\n        ratio: false,\r\n        scale: [5000, 10000, 20000, 40000],\r\n        downloadChecked: false,\r\n    },\r\n    {\r\n        id: 'basemap',\r\n        level: 'M10',\r\n        level_name: '1:100 000 000',\r\n        style: 'rikNews',\r\n        export_size: 2000,\r\n        downloadChecked: false,\r\n    },\r\n    {\r\n        id: 'meteored',\r\n        area: 'etr_mercator',\r\n        extent: false,\r\n        value: 'temperature',\r\n        downloadChecked: false,\r\n        seqChecked: false,\r\n    },\r\n    {\r\n        id: 'shapefile',\r\n        name: 'New_shape',\r\n        om: 'overmap',\r\n        satellite: false,\r\n        downloadChecked: false,\r\n    },\r\n    {\r\n        id: 'hydro',\r\n        url: 'https://meteoinfo.ru/novosti/17891-gidrologicheskij-obzor-7-aprelya-2021-g',\r\n        downloadChecked: false,\r\n    },\r\n    {\r\n        id: 'fires',\r\n        site: false,\r\n        downloadChecked: false,\r\n    },\r\n    {\r\n        id: 'satellite',\r\n        om_layers: [],\r\n        downloadChecked: false,\r\n    },\r\n    {\r\n        id: 'temperature',\r\n        temp_lyr: false,\r\n        downloadChecked: false,\r\n    },\r\n    {\r\n        id: 'tools',\r\n        toolChange: 'Gismeteo',\r\n    },\r\n    {\r\n        id: 'vybory',\r\n        vybory_lyr: false,\r\n        data_type: 'gd',\r\n        value: 'ed_ros',\r\n        scale: [2, 5, 10, 15],\r\n        colors: [\"#c9cfec\", \"#82a0dd\", \"#4d58f4\", \"#030fae\", \"#000256\"],\r\n        csv_om: false,\r\n        excel: true\r\n    },\r\n    {\r\n        id: 'datamos',\r\n        dataset_id: 0,\r\n        atd_div: ['district', 'okruga'],\r\n        csv_om: false,\r\n        downloadChecked: false,\r\n    },\r\n    {\r\n        id: 'afganistan',\r\n        visible: false,\r\n        status_date: 'neutral',\r\n        visible_poly: false,\r\n        visible_poi: false,\r\n        downloadChecked: false,\r\n    }\r\n]\r\n\r\ntype tplotOptions = {\r\n    [key: string]: string\r\n}\r\n\r\nconst level_name : tplotOptions = {\r\n    M10:\"1:100 000 000\",\r\n    M05:\"1:50 000 000\",\r\n    M01:\"1:10 000 000\",\r\n    M500:\"1:500 000\",\r\n    M200:\"1:200 000\",\r\n}\r\n\r\nexport default function (state = INITIAL_STATE, action: any) {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case 'BOUNDS_CHANGE':\r\n            return state.map(l => {\r\n                if (l.id === 'map') {\r\n                    l.bounds = action.payload.layerBounds;\r\n                }\r\n                return l;\r\n            });\r\n        case 'ADD_SHAPES':\r\n            return state.map(l => {\r\n                if (l.id === 'map') {\r\n                    l.polygons = action.payload.shapes;\r\n                }\r\n                return l;\r\n            });\r\n        case 'DELETE_SHAPES':\r\n            return state.map(l => {\r\n                if (l.id === 'map') {\r\n                    l.polygons = action.payload.shapes;\r\n                }\r\n                return l;\r\n            });\r\n        case 'ADD_POLYGONS_ARR':\r\n            return state.map(l => {\r\n                if (l.id === 'map') {\r\n                    l.polygonsArr = action.payload.polygonsArr;\r\n                }\r\n                return l;\r\n            });\r\n        case 'MAP_ZOOM_CHANGE':\r\n            return state.map(l => {\r\n                if (l.id === 'map') {\r\n                    l.zoom = action.payload.zoom;\r\n                }\r\n                return l;\r\n            });\r\n        case 'MAP_CENTER_CHANGE':\r\n            return state.map(l => {\r\n                if (l.id === 'map') {\r\n                    l.center = action.payload.center;\r\n                }\r\n                return l;\r\n            });\r\n        case 'MAP_ZOOM_CHANGE_MANUALLY':\r\n            return state.map(l => {\r\n                if (l.id === 'map') {\r\n                    l.zoom_change = action.payload.checkboxChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'RADAR_BUTTON_PUSH':\r\n            return state.map(l => {\r\n                if (l.id === 'radar') {\r\n                    l.downloadChecked = action.payload.downloadCheckedButton;\r\n                }\r\n                return l;\r\n            });\r\n        case 'RADAR_AREA_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'radar') {\r\n                    l.area = action.payload.areaChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'RADAR_CELL_SIZE_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'radar') {\r\n                    l.cellsize = action.payload.cellsizeChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'RADAR_HOUR_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'radar') {\r\n                    l.hour = action.payload.hourChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'RADAR_MINUTE_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'radar') {\r\n                    l.minute = action.payload.minuteChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'RADAR_PERIOD_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'radar') {\r\n                    l.period = action.payload.periodChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'RADAR_RAINVIEWER_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'radar') {\r\n                    l.rainviewer = action.payload.checkboxChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'GISMETEO_BUTTON_PUSH':\r\n            return state.map(l => {\r\n                if (l.id === 'gismeteo') {\r\n                    l.downloadChecked = action.payload.downloadCheckedButton;\r\n                }\r\n                return l;\r\n            });\r\n        case 'GISMETEO_AREA_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'gismeteo') {\r\n                    l.area = action.payload.areaChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'GISMETEO_EXTENT_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'gismeteo') {\r\n                    l.extent = action.payload.checkboxChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'CORONA_BUTTON_PUSH':\r\n            return state.map(l => {\r\n                if (l.id === 'corona') {\r\n                    l.downloadChecked = action.payload.downloadCheckedButton;\r\n                }\r\n                return l;\r\n            });\r\n        case 'CORONA_AREA_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'corona') {\r\n                    l.area = action.payload.areaChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'CORONA_STYLE_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'corona') {\r\n                    l.style = action.payload.styleChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'CORONA_VALUE_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'corona') {\r\n                    l.value = action.payload.valueChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'CORONA_CHECKBOX_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'corona') {\r\n                    l.ratio = action.payload.checkboxChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'CORONA_SCALE_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'corona') {\r\n                    l.scale = action.payload.scaleChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'BASEMAP_BUTTON_PUSH':\r\n            return state.map(l => {\r\n                if (l.id === 'basemap') {\r\n                    l.downloadChecked = action.payload.downloadCheckedButton;\r\n                }\r\n                return l;\r\n            });\r\n        case 'BASEMAP_LEVEL_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'basemap') {\r\n                    l.level = action.payload.levelChecked;\r\n                    l.level_name = level_name[action.payload.levelChecked]\r\n                }\r\n                return l;\r\n            });\r\n        case 'BASEMAP_STYLE_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'map') {\r\n                    l.style = action.payload.style;\r\n                }\r\n                return l;\r\n            });\r\n        case 'BASEMAP_STYLEEXPORT_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'basemap') {\r\n                    l.style = action.payload.styleChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'BASEMAP_CHANGE_EXPORT_SIZE':\r\n                return state.map(l => {\r\n                    if (l.id === 'basemap') {\r\n                        l.export_size = action.payload.export_size;\r\n                    }\r\n                    return l;\r\n                });\r\n        case 'METEORED_BUTTON_PUSH':\r\n            return state.map(l => {\r\n                if (l.id === 'meteored') {\r\n                    l.downloadChecked = action.payload.downloadCheckedButton;\r\n                }\r\n                return l;\r\n            });\r\n        case 'METEORED_VALUE_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'meteored') {\r\n                    l.value = action.payload.valueChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'METEORED_AREA_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'meteored') {\r\n                    l.area = action.payload.areaChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'METEORED_EXTENT_CHOOSE':\r\n            return state.map(l => {\r\n                if (l.id === 'meteored') {\r\n                    l.extent = action.payload.checkboxChecked;\r\n                }\r\n                return l;\r\n            });\r\n        case 'SHAPEFILE_BUTTON_PUSH':\r\n            return state.map(l => {\r\n                if (l.id === 'shapefile') {\r\n                    l.downloadChecked = action.payload.downloadCheckedButton;\r\n                }\r\n                return l;\r\n            });\r\n        case 'SHAPEFILE_SAT_ADD':\r\n            return state.map(l => {\r\n                if (l.id === 'shapefile') {\r\n                    l.satellite = action.payload.addSatellite;\r\n                }\r\n                return l;\r\n            });\r\n        case 'SHAPEFILE_OM_CHANGE':\r\n            return state.map(l => {\r\n                if (l.id === 'shapefile') {\r\n                    l.om = action.payload.omChoose;\r\n                }\r\n                return l;\r\n            });\r\n        case 'SHAPEFILE_NAME_CHANGE':\r\n            return state.map(l => {\r\n                if (l.id === 'shapefile') {\r\n                    l.name = action.payload.shapefileName;\r\n                }\r\n                return l;\r\n            });\r\n        case 'SATELLITE_BUTTON_PUSH':\r\n                return state.map(l => {\r\n                    if (l.id === 'satellite') {\r\n                        l.downloadChecked = action.payload.downloadCheckedButton;\r\n                    }\r\n                    return l;\r\n                });\r\n        case 'SATELLITE_OM_LYR':\r\n            return state.map(l => {\r\n                if (l.id === 'satellite') {\r\n                    l.om_layers = action.payload.om_layers;\r\n                }\r\n                return l;\r\n            });\r\n        case 'HYDRO_URL_CHANGE':\r\n            return state.map(l => {\r\n                if (l.id === 'hydro') {\r\n                    l.url = action.payload.urlChange;\r\n                }\r\n                return l;\r\n            });\r\n        case 'HYDRO_BUTTON_PUSH':\r\n            return state.map(l => {\r\n                if (l.id === 'hydro') {\r\n                    l.downloadChecked = action.payload.downloadCheckedButton;\r\n                }\r\n                return l;\r\n            });\r\n        case 'FIRES_BUTTON_PUSH':\r\n            return state.map(l => {\r\n                if (l.id === 'fires') {\r\n                    l.downloadChecked = action.payload.downloadCheckedButton;\r\n                }\r\n                return l;\r\n            });\r\n        case 'DOWNLOAD_FROM_SITE':\r\n            return state.map(l => {\r\n                if (l.id === 'fires') {\r\n                    l.site = action.payload.downloadFromSite;\r\n                }\r\n                return l;\r\n            });\r\n        case 'TEMP_BUTTON_PUSH':\r\n            return state.map(l => {\r\n                if (l.id === 'temperature') {\r\n                    l.downloadChecked = action.payload.downloadCheckedButton;\r\n                }\r\n                return l;\r\n            });\r\n        case 'TEMP_LYR_ADD':\r\n            return state.map(l => {\r\n                if (l.id === 'temperature') {\r\n                    l.temp_lyr = action.payload.lyrAdd;\r\n                }\r\n                return l;\r\n            });\r\n        case 'TOOLS_TOOL_CHOOSE':\r\n                return state.map(l => {\r\n                    if (l.id === 'tools') {\r\n                        l.toolChange = action.payload.toolChange;\r\n                    }\r\n                    return l;\r\n                });\r\n                case 'VYBORY_BUTTON_PUSH':\r\n                    return state.map(l => {\r\n                        if (l.id === 'vybory') {\r\n                            l.downloadChecked = action.payload.downloadCheckedButton;\r\n                        }\r\n                        return l;\r\n                    });\r\n                case 'VYBORY_AREA_CHOOSE':\r\n                    return state.map(l => {\r\n                        if (l.id === 'vybory') {\r\n                            l.data_type = action.payload.areaChecked;\r\n                        }\r\n                        return l;\r\n                    });\r\n                case 'VYBORY_STYLE_CHOOSE':\r\n                    return state.map(l => {\r\n                        if (l.id === 'vybory') {\r\n                            l.value = action.payload.styleChecked;\r\n                        }\r\n                        return l;\r\n                    });\r\n                case 'VYBORY_CHECKBOX_CHOOSE':\r\n                    return state.map(l => {\r\n                        if (l.id === 'vybory') {\r\n                            l.csv_om = action.payload.checkboxChecked;\r\n                        }\r\n                        return l;\r\n                    });\r\n                case 'VYBORY_SCALE_CHOOSE':\r\n                    return state.map(l => {\r\n                        if (l.id === 'vybory') {\r\n                            l.scale = action.payload.scaleChecked;\r\n                        }\r\n                        return l;\r\n                    });\r\n                case 'VYBORY_COLOR_CHOOSE':\r\n                    return state.map(l => {\r\n                        if (l.id === 'vybory') {\r\n                            l.colors = action.payload.colorChecked;\r\n                        }\r\n                        return l;\r\n                    });\r\n                case 'AFGANISTAN_BUTTON_PUSH':\r\n                    return state.map(l => {\r\n                        if (l.id === 'afganistan') {\r\n                            l.visible = action.payload.downloadCheckedButton;\r\n                        }\r\n                        return l;\r\n                    });\r\n                case 'AFGANISTAN_STATUS_DATE':\r\n                    return state.map(l => {\r\n                        if (l.id === 'afganistan') {\r\n                            l.status_date = action.payload.status_date;\r\n                        }\r\n                        return l;\r\n                    });\r\n        default:\r\n            return state\r\n    }\r\n    ;\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport LayersReducers from './layers';\r\n\r\nconst allReducers = combineReducers({\r\n    layers: LayersReducers,\r\n});\r\n\r\nexport default allReducers;\r\n","import { createStore } from 'redux';\r\nimport allReducers from './reducers';\r\n\r\nconst store = createStore(allReducers);\r\n\r\nexport default store;\r\n","export const currentbounds = (bounds:any) => {\r\n\r\n    return {\r\n        type: \"BOUNDS_CHANGE\",\r\n        payload: { layerBounds: bounds }\r\n    }\r\n}\r\n","export const actionZoom = (newzoom:any) => {\r\n\r\n    return {\r\n        type: \"MAP_ZOOM_CHANGE\",\r\n        payload: { zoom: newzoom }\r\n    }\r\n}","export const actionLevel = (level:string) => {\r\n    console.log(level)\r\n\r\n    return {\r\n        type: \"BASEMAP_LEVEL_CHOOSE\",\r\n        payload: { levelChecked: level }\r\n    }\r\n}","import React from 'react';\r\nimport { GeoJSON, FeatureGroup, Popup } from 'react-leaflet';\r\nimport { Table } from 'react-bootstrap';\r\nimport { Circle, Tooltip } from 'leaflet';\r\n//import \"../css/GeojsonLayer.css\"\r\n\r\nexport default class Afganistan_Layer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      status_date: 'neutral',\r\n      data: []\r\n    };\r\n\r\n    console.log('contructor poly');\r\n  }\r\n\r\n  myStyle = (f) => {\r\n    return {\r\n      color: 'white',\r\n      weight: 1,\r\n      fillOpacity: 1,\r\n      fillColor: f.properties.color,\r\n    }\r\n  }\r\n\r\n  neutralStyle = (f) => {\r\n    return {\r\n      color: '#9ea4c8',\r\n      weight: 1,\r\n      fillOpacity: 1,\r\n      fillColor: 'white',\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log('render poly');\r\n\r\n    //console.info(this.state.data);\r\n    return (\r\n      <FeatureGroup>\r\n        {this.state.data.map(f => {\r\n          if (this.state.status_date === \"neutral\") {\r\n          return (<GeoJSON key={f.properties.objectid} data={f} style={this.neutralStyle(f)} >\r\n             <Popup>\r\n             <Table striped bordered hover>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Регион</td>\r\n                    <td>{f.properties.name_1}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Район</td>\r\n                    <td>{f.properties.name_2}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n             </Popup>\r\n             {/*<Tooltip direction=\"right\" offset={[0, 0]} opacity={1} permanent>{f.properties.name_rus}</Tooltip>*/}\r\n          </GeoJSON>)\r\n        }\r\n        else if (this.state.status_date === \"1_may_2021\" ||\r\n                  this.state.status_date === \"june_2021\" ||\r\n                  this.state.status_date === \"july_2021\" ||\r\n                  this.state.status_date === \"august_2021\" ||\r\n                  this.state.status_date === \"september_2021\"\r\n                  ) {\r\n          return (<GeoJSON key={f.properties.objectid} data={f} style={this.myStyle(f)}>\r\n             <Popup>\r\n             <Table striped bordered hover>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Регион</td>\r\n                    <td>{f.properties.name_1}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Район</td>\r\n                    <td>{f.properties.name_2}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Статус</td>\r\n                    <td>{f.properties.status}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n             </Popup>\r\n             {/*<Tooltip direction=\"right\" offset={[0, 0]} opacity={1} permanent>{f.properties.name_rus}</Tooltip>*/}\r\n          </GeoJSON>)\r\n        }\r\n      }\r\n        )}\r\n      </FeatureGroup>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.url) {\r\n      this.fetchData(this.props.url);\r\n    }\r\n    this.setState({\r\n      status_date: this.props.id,\r\n    });\r\n    //console.log(this.props);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('will unmount');\r\n\r\n  }\r\n\r\n  fetchData(url) {\r\n    let request = fetch(url)\r\n\r\n    request\r\n      .then(r => r.json())\r\n      .then(data => {\r\n        this.setState({\r\n          data: data.features,\r\n        });\r\n      }, (error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n}","import L from 'leaflet';\r\n//import Logo from '../../../../public/logo195.png';\r\n\r\nconst iconPerson = new L.Icon({\r\n    iconUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_icon_nato_leave.png\",\r\n    iconRetinaUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_icon_nato_leave.png\",\r\n    iconAnchor: new L.Point(50, 82),\r\n    popupAnchor: new L.Point(160, -15),\r\n    shadowUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_icon_nato_leave.png\",\r\n    shadowSize: new L.Point(50, 82),\r\n    shadowAnchor: new L.Point(50, 82),\r\n    iconSize: new L.Point(50, 82),\r\n    className: 'leaflet-div-icon'\r\n});\r\n\r\nexport { iconPerson };","import L from 'leaflet';\r\n//import Logo from '../../../../public/logo195.png';\r\n\r\nconst icon_red = new L.Icon({\r\n    iconUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_red_cirlce_icon.png\",\r\n    iconRetinaUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_red_cirlce_icon.png\",\r\n    iconAnchor: null,\r\n    popupAnchor: null,\r\n    shadowUrl: null,\r\n    shadowSize: null,\r\n    shadowAnchor: null,\r\n    iconSize: new L.Point(18, 18),\r\n    className: 'leaflet-div-icon'\r\n});\r\n\r\nexport { icon_red };","import L from 'leaflet';\r\n//import Logo from '../../../../public/logo195.png';\r\n\r\nconst icon_black = new L.Icon({\r\n    iconUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_black_circle_icon.png\",\r\n    iconRetinaUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_black_circle_icon.png\",\r\n    iconAnchor: null,\r\n    popupAnchor: null,\r\n    shadowUrl: null,\r\n    shadowSize: null,\r\n    shadowAnchor: null,\r\n    iconSize: new L.Point(18, 18),\r\n    className: 'leaflet-div-icon'\r\n});\r\n\r\nexport { icon_black };","import L from 'leaflet';\r\n//import Logo from '../../../../public/logo195.png';\r\n\r\nconst icon_blue = new L.Icon({\r\n    iconUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_blue_circle_icon.png\",\r\n    iconRetinaUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_blue_circle_icon.png\",\r\n    iconAnchor: null,\r\n    popupAnchor: null,\r\n    shadowUrl: null,\r\n    shadowSize: null,\r\n    shadowAnchor: null,\r\n    iconSize: new L.Point(18, 18),\r\n    className: 'leaflet-div-icon'\r\n});\r\n\r\nexport { icon_blue };","import React, { useRef } from 'react';\r\nimport { Map, TileLayer, FeatureGroup, Popup, WMSTileLayer, Marker, SVGOverlay, Circle, Pane, Tooltip } from 'react-leaflet';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { LatLngTuple } from 'leaflet';\r\nimport { EditControl } from 'react-leaflet-draw';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { currentbounds } from \"./actions/index\";\r\nimport { actionZoom } from \"../Cards/Radar/radarActions/changeZoom\";\r\nimport { actionLevel } from \"../Cards/Basemap/basemapActions/levelChoose\";\r\nimport GeojsonLayer from \"../Cards/Basemap/Layers\";\r\nimport Afganistan_Layer from './Afganistan_Layer';\r\nimport Afganistan_Layer_Poi from './Afganistan_Layer_Poi';\r\n//import iconPerson from \"./Icon\";\r\nimport './Map.css';\r\nimport { idText } from 'typescript';\r\nimport L from \"leaflet\";\r\nimport { iconPerson } from './Icon';\r\nimport { icon_red } from './Icon_red';\r\nimport { icon_black } from './Icon_black';\r\nimport { icon_blue } from './Icon_blue';\r\n\r\n\r\n\r\n// style = 'https://api.mapbox.com/styles/v1/valeriabelousova/ckkgmiumn0idl17qp5eh7nuqh/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoidmFsZXJpYWJlbG91c292YSIsImEiOiJjanBmMmt0c2cwNjQyM3FsZ2gzY2dvemNvIn0.skr82NeiNVFPUi-zxKKqiw'\r\n// current = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n\r\n//const defaultLatLng: LatLngTuple = [52.865572, 37.283523];\r\n\r\n\r\nconst AfganistanMap:React.FC = (props:any) => {\r\n  {props.layers.map( (l:any) => {\r\n    if (l.icon==='blue') {}})}\r\n    L.Icon.Default.imagePath = \"https://raw.githubusercontent.com/ValeriaBelousova/3d-model/master/\"\r\n    //const [zoom, setZoom] = useState(props.layers[0].zoom)\r\n    const mapRef = useRef();\r\n    \r\n    const purpleOptions = { color: 'purple' }\r\n\r\n    const setZoom = (e:any) => {\r\n      console.log(props.layers[0].zoom);\r\n      if (e.zoom != props.layers[0].zoom) { \r\n        props.zoomChange(e.zoom)\r\n        if (props.layers[0].zoom <=5 && (props.layers[0].zoom_change === false)) {props.setLevel(\"M10\")}\r\n        else if (props.layers[0].zoom > 5 && props.layers[0].zoom <= 7) {props.setLevel(\"M05\")}\r\n        else if (props.layers[0].zoom > 7 && props.layers[0].zoom <= 10) {props.setLevel(\"M01\")}\r\n        }\r\n    }\r\n    const additionalLyr = {\r\n    \"1_may_2021\":\"http://172.19.114.29:8080/geoserver/publiclayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=publiclayers%3Argnpol_afganistan_1_may_2021&maxFeatures=350&outputFormat=application%2Fjson\",\r\n  \"june_2021\":\"http://172.19.114.29:8080/geoserver/publiclayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=publiclayers%3Aafganistan_june_2021&maxFeatures=350&outputFormat=application%2Fjson\",\r\n\"july_2021\":\"http://172.19.114.29:8080/geoserver/publiclayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=publiclayers%3Aafganistan_july_2021&maxFeatures=350&outputFormat=application%2Fjson\",\r\n\"august_2021\":\"http://172.19.114.29:8080/geoserver/publiclayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=publiclayers%3Aafganistan_august_2021&maxFeatures=350&outputFormat=application%2Fjson\",\r\n\"kabul\":\"http://172.19.114.29:8080/geoserver/publiclayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=publiclayers%3Aafganistan_cities&maxFeatures=50&outputFormat=application%2Fjson\",\r\n\"mazari_sharif\":\"\",\r\n\"bagram\":\"http://172.19.114.29:8080/geoserver/baselayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=baselayers%3Apoppnt11&maxFeatures=50&outputFormat=application%2Fjson\",\r\n\"bazarak\":\"\"}\r\n    const baselayers = {\"M10\":\"baselayers:group_m11\",\r\n                        \"M05\":\"\",\r\n                        \"M01\":\"\"}\r\n    return (\r\n        <Map\r\n            //ref={mapRef}\r\n            center={props.layers[0].center}\r\n            zoom={props.layers[0].zoom}\r\n            minZoom={6}\r\n            maxZoom={8}\r\n            onViewportChange={setZoom}\r\n            >\r\n              <WMSTileLayer\r\n                    layers={'baselayers:afganistan_base'}\r\n                    url=\"http://172.19.114.29:8080/geoserver/baselayers/wms\"\r\n                    transparent={true}\r\n                    format={'image/png'}\r\n                  />      \r\n              {props.layers.map( (l:any) => {\r\n              {/*if (l.visible===true) { */}\r\n                let status_date:string = l.status_date;\r\n                console.log('status_date', status_date);\r\n                //console.log(L.Icon.Default.imagePath);\r\n                if (status_date == \"neutral\" ) {\r\n                  return ( \r\n                    <FeatureGroup>\r\n                      {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\r\n                      <Afganistan_Layer key={status_date} id={status_date} url={additionalLyr[\"1_may_2021\"]}/>\r\n                      <Marker \r\n                      icon={icon_blue}\r\n                      position={[34.532780, 69.165830]}>\r\n                      <Tooltip offset={[-5, 10]} opacity={1} className={'blue_tooltip'} permanent>\r\n                        <span>Кабул</span>\r\n                      </Tooltip>\r\n                    </Marker>\r\n                  </FeatureGroup>\r\n                  )}\r\n                if (status_date == \"1_may_2021\") {\r\n                    return ( \r\n                      <FeatureGroup>\r\n                        {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\r\n                        <Afganistan_Layer key={status_date} id={status_date} url={additionalLyr[\"1_may_2021\"]}/>\r\n                        <Marker icon={icon_red} position={[34.532780, 69.165830]}>\r\n                        <Tooltip offset={[-5, 10]} opacity={1} className={'red_tooltip'} permanent>\r\n                          <span>Кабул</span>\r\n                        </Tooltip>\r\n                      </Marker>\r\n                    </FeatureGroup>\r\n                    )}\r\n                else if (status_date == \"june_2021\") {\r\n                    return ( \r\n                      <FeatureGroup>\r\n                        {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\r\n                    <Afganistan_Layer key={status_date} id={status_date} url={additionalLyr[\"june_2021\"]}/>\r\n                    <Marker icon={icon_red} position={[34.520230, 69.179961]}>\r\n                      <Tooltip className={'red_tooltip'} permanent>\r\n                        <span>Кабул</span>\r\n                      </Tooltip>\r\n                    </Marker>\r\n                    <Marker icon={icon_black} position={[36.7089,67.1108]}>\r\n                          <Tooltip className={'black_tooltip'} permanent>\r\n                            <span>Мазари-Шариф</span>\r\n                          </Tooltip>\r\n                        </Marker>\r\n                    </FeatureGroup>\r\n                    )}\r\n                    else if (status_date == \"july_2021\") {\r\n                      return ( <FeatureGroup>\r\n                        <Afganistan_Layer key={status_date} id={status_date} url={additionalLyr[\"1_may_2021\"]}/>\r\n                        {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\r\n                        <Marker icon={icon_red} position={[34.520230, 69.179961]}>\r\n                          <Tooltip className={'red_tooltip'} permanent>\r\n                            <span>Кабул</span>\r\n                          </Tooltip>\r\n                        </Marker>\r\n                        <Marker icon={iconPerson} position={[34.96667,69.29278]}>\r\n                          <Popup className={'icon-leave'}>\r\n                          <Card style={{ width: '18rem' }}>\r\n  <Card.Img variant=\"top\" src=\"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/nato.jpg\" />\r\n  <Card.Body>\r\n    <Card.Title>Баграм</Card.Title>\r\n    <Card.Text>\r\n    Последние военные США ушли с авиабазы в Баграме. Почему это важно и чем опасно?\r\n    </Card.Text>\r\n    <Button variant=\"dark\"\r\n        href=\"https://www.bbc.com/russian/news-57684355\"\r\n        target=\"_blank\">\r\n        Читать</Button>\r\n  </Card.Body>\r\n</Card>\r\n                          </Popup>\r\n                        </Marker>\r\n                      </FeatureGroup>)}\r\n                      else if (status_date == \"august_2021\") {\r\n                        return ( <FeatureGroup>\r\n                          <Afganistan_Layer key={status_date} id={status_date} url={additionalLyr[\"august_2021\"]}/>\r\n                          {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\r\n                          <Marker icon={icon_black} position={[34.520230, 69.179961]}>\r\n                              <Tooltip className={'black_tooltip'} permanent>\r\n                                <span>Кабул</span>\r\n                              </Tooltip>\r\n                            </Marker>\r\n                        </FeatureGroup>)}\r\n                        else if (status_date == \"september_2021\") {\r\n                          return ( <FeatureGroup>\r\n                            <Afganistan_Layer key={status_date} id={status_date} url={additionalLyr[\"august_2021\"]}/>\r\n                            {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\r\n                            <Marker icon={icon_red} position={[35.445, 69.752]}>\r\n                              <Tooltip className={'red_tooltip'} permanent>\r\n                                <span>Базарак</span>\r\n                              </Tooltip>\r\n                            </Marker>\r\n                            <Marker icon={icon_black} position={[34.520230, 69.179961]}>\r\n                              <Tooltip className={'black_tooltip'} permanent>\r\n                                <span>Кабул</span>\r\n                              </Tooltip>\r\n                            </Marker>\r\n                          </FeatureGroup>)}\r\n\r\n              {/* } */}\r\n\r\n\r\n            })}\r\n            {/*{props.layers.map( (l:any) => {\r\n              if (l.visible===true) {\r\n                let status_date:string = l.status_date;\r\n                  return ( <Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>)\r\n                  }})}*/}\r\n        </Map>\r\n   );\r\n}\r\nconst mapStateToProps = (state:any) => {\r\n    return {\r\n      layers: state.layers\r\n    };\r\n  };\r\n\r\nconst matchDispatchToProps = (dispatch:any) => {\r\n    return bindActionCreators({\r\n      addBounds: currentbounds,\r\n      zoomChange: actionZoom,\r\n      setLevel: actionLevel,\r\n    }, dispatch);\r\n  };\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(AfganistanMap);\r\n","export const actionTool = (tools:string) => {\r\n\r\n    return {\r\n        type: \"TOOLS_TOOL_CHOOSE\",\r\n        payload: { toolChange: tools }\r\n    }\r\n}\r\n","export const actionStatus_Date = (value:string) => {\r\n\r\n    return {\r\n        type: \"AFGANISTAN_STATUS_DATE\",\r\n        payload: { status_date: value }\r\n    }\r\n}\r\n","export const actionCenter = (newcenter:any) => {\r\n\r\n    return {\r\n        type: \"MAP_CENTER_CHANGE\",\r\n        payload: { center: newcenter }\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport {Button, Accordion, Card, Form} from 'react-bootstrap';\r\nimport {actionTool} from '../Tools/toolAction/actionTool';\r\nimport SpinnerForLoading from '../../additional/Spinner/SpinnerForLoading';\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport { pushButton } from \"./actionTest/buttonPush\";\r\nimport { actionStatus_Date } from './actionTest/actionStatus_Date';\r\nimport { actionZoom } from \"../Cards/Radar/radarActions/changeZoom\";\r\nimport { actionCenter } from \"../Cards/Radar/radarActions/changeCenter\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Timeline.css';\r\n\r\n\r\n\r\nconst Afganistan_Timeline: React.FC = (props: any) => {\r\n\r\n    const click_li = (e:any) => {\r\n        \r\n        if (e.target.id == 'july_2021') {\r\n            props.setZoom(7);\r\n            props.setCenter([35.874495, 68.928351]);\r\n        }\r\n        else if (e.target.id == 'september_2021') {\r\n            props.setZoom(8);\r\n            props.setCenter([34.994495, 68.928351]);\r\n        }\r\n        else if (e.target.id == 'june_2021') {\r\n            props.setZoom(6.5);\r\n            props.setCenter([34.674495, 68.928351]);\r\n        }\r\n        else if (e.target.id == 'august_2021') {\r\n            props.setZoom(6.5);\r\n            props.setCenter([34.674495, 68.928351]);\r\n        }\r\n        else if (e.target.id == '1_may_2021' || e.target.id == 'neutral') {\r\n            props.setCenter([34.008630, 66.000947]);\r\n            props.setZoom(6);\r\n            \r\n        }\r\n        props.setStatus_Date(e.target.id);\r\n    }\r\n     return (\r\n         <div className='tools'>\r\n                 <Card.Body>\r\n                     <div className=\"container mt-0 mb-0\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-0 offset-md-0\">\r\n                                    <h4 onClick={click_li} id=\"neutral\">Война в Афганистане</h4>\r\n                                    <ul className=\"timeline\">\r\n                                        <li onClick={click_li} id=\"1_may_2021\">\r\n                                            <h5 onClick={click_li} id=\"1_may_2021\">1 мая 2021</h5>\r\n                                            {props.layers.map( (l:any) => {\r\n                                                if (l.visible===true) {\r\n                                                    let status_date:string = l.status_date;\r\n                                                    console.log('status_date', status_date);\r\n                                                    if (status_date == \"1_may_2021\") {\r\n                                                    return ( \r\n                                            <p>Официальная дата окончательного вывода вооружённых сил НАТО</p>)}}})}\r\n                                        </li>\r\n                                        <li onClick={click_li} id=\"june_2021\">\r\n                                            <h5 onClick={click_li} id=\"june_2021\">Июнь 2021</h5>\r\n                                            {props.layers.map( (l:any) => {\r\n                                                if (l.visible===true) {\r\n                                                    let status_date:string = l.status_date;\r\n                                                    console.log('status_date', status_date);\r\n                                                    if (status_date == \"june_2021\") {\r\n                                                    return (\r\n                                            <p>Активизация Талибан</p>)}}})}\r\n                                        </li>\r\n                                        <li onClick={click_li} id=\"july_2021\">\r\n                                        <h5 onClick={click_li} id=\"july_2021\">Июль 2021</h5>\r\n                                            {props.layers.map( (l:any) => {\r\n                                                if (l.visible===true) {\r\n                                                    let status_date:string = l.status_date;\r\n                                                    console.log('status_date', status_date);\r\n                                                    if (status_date == \"july_2021\") {\r\n                                                    return (\r\n                                            <p>Войска НАТО покидают Баграм</p>)}}})}\r\n                                        </li>\r\n                                        <li onClick={click_li} id=\"august_2021\">\r\n                                            <h5 onClick={click_li} id=\"august_2021\">Август 2021</h5>\r\n                                            {props.layers.map( (l:any) => {\r\n                                                if (l.visible===true) {\r\n                                                    let status_date:string = l.status_date;\r\n                                                    console.log('status_date', status_date);\r\n                                                    if (status_date == \"august_2021\") {\r\n                                                    return (\r\n                                            <p>Окружение и взятие Кабула. Бегство президента Ашрафа Гани</p>)}}})}\r\n                                        </li>\r\n                                        <li onClick={click_li} id=\"september_2021\">\r\n                                            <h5 onClick={click_li} id=\"september_2021\">5 сентября 2021</h5>\r\n                                            {props.layers.map( (l:any) => {\r\n                                                if (l.visible===true) {\r\n                                                    let status_date:string = l.status_date;\r\n                                                    console.log('status_date', status_date);\r\n                                                    if (status_date == \"september_2021\") {\r\n                                                    return (\r\n                                            <p>Силы сопротивления передислоцировались в Панджшер</p>)}}})}\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                 </Card.Body>\r\n         </div>\r\n     );\r\n }\r\n const mapStateToProps = (state:any) => {\r\n     return {\r\n       layers: state.layers\r\n     }; \r\n   };\r\n const matchDispatchToProps = (dispatch:any) => {\r\n    return bindActionCreators({\r\n        setTool: actionTool,\r\n        setStatus_Date: actionStatus_Date,\r\n        setZoom: actionZoom,\r\n        setCenter: actionCenter,\r\n    }, dispatch);\r\n  };\r\n \r\n export default connect(mapStateToProps, matchDispatchToProps)(Afganistan_Timeline);\r\n","import React, { useState } from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport '../Toolbox.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Afganistan_Timeline from \"../TEST/Afganistan_Timeline\";\r\n\r\nconst Toolbox:React.FC = (props:any) => {\r\n    const [checked, setChecked] = useState(props.layers[1].downloadChecked);\r\n\r\n    return (\r\n        <div className='toolbox'>\r\n            <Afganistan_Timeline/>    \r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state:any) => {\r\n    return {\r\n        layers: state.layers\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Toolbox);\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport {connect} from \"react-redux\";\r\n\r\n//import Toolbox from './Toolbox/Toolbox';\r\nimport AfganistanMap from './Toolbox/TEST/Afganistan_Map';\r\nimport Toolbox from './Toolbox/TEST/AfganistanToolbox';\r\n\r\nconst Afganistan:React.FC = (props:any) => {\r\n    return (\r\n    <div className='page_iframe'>\r\n    <Toolbox/>\r\n        <div className=\"mapAfganistan\">\r\n          <AfganistanMap/>\r\n        </div>\r\n    </div>);\r\n  }\r\n  const mapStateToProps = (state:any) => {\r\n    return {\r\n      layers: state.layers\r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps)(Afganistan);","import React from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\nimport Afganistan from './components/map_afganistan';\n\n{/*\nconst App :React.FC = (props:any) => { \n  document.title = \"Geo Server\"\n  return (\n    <div className=\"app\">\n      <Router>\n        <div>\n          <Route exact path=\"/\" component={Main_map} />\n          <Route exact path=\"/afganistan\" component={Afganistan} />\n        </div>\n      </Router>\n    </div>)};\n  */}\n\n\nfunction App() {\n    document.title = \"Geo Server\"\n  return (\n      <div className=\"app\">\n        <Afganistan/>\n      </div>\n  );\n}\n\n\n{/*\nconst App:React.FC = (props:any) => {\n  document.title = \"Geo Server\"\n  return (\n    <div id=\"app\">\n      <Toolbox/>\n      <div id=\"map\">\n      {props.layers.map( (l:any) => {\n        let mode:string = l.toolChange;\n        if (mode === \"Afganistan\") {\n          console.log('new map');\n          return (\n            <AfganistanMap/>\n          )\n        }\n      else if (mode === \"Gismeteo\" || \n              mode === \"temperature\" ||\n              mode === \"hydro\" ||\n              mode === \"fires\" ||\n              mode === \"sat\" ||\n              mode === \"shp\" ||\n              mode === \"meteored\" ||\n              mode === \"corona\" ||\n              mode === \"radar\" ||\n              mode === \"vybory\") {\n        console.log('old map');\n        return (<LeafletMap/>)\n      }})}\n        \n      </div>\n    </div>\n);\n}\n*/}\nconst mapStateToProps = (state:any) => {\n  return {\n    layers: state.layers\n  };\n};\n\nexport default connect(mapStateToProps)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './index.css';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <React.StrictMode>\r\n            <App />\r\n        </React.StrictMode>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}