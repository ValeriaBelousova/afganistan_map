{"version":3,"sources":["reducers/layers.ts","reducers/index.ts","store.tsx","components/Toolbox/TEST/actions/index.ts","components/Toolbox/Cards/Radar/radarActions/changeZoom.ts","components/Toolbox/Cards/Basemap/basemapActions/levelChoose.ts","components/Toolbox/TEST/Afganistan_Layer.jsx","components/Toolbox/TEST/Icon.jsx","components/Toolbox/TEST/Icon_red.jsx","components/Toolbox/TEST/Icon_black.jsx","components/Toolbox/TEST/Icon_blue.jsx","components/Toolbox/TEST/Afganistan_Map.tsx","components/Toolbox/Tools/toolAction/actionTool.ts","components/Toolbox/TEST/actionTest/actionStatus_Date.ts","components/Toolbox/Cards/Radar/radarActions/changeCenter.ts","components/Toolbox/TEST/Afganistan_Timeline.tsx","components/Toolbox/TEST/AfganistanToolbox.tsx","components/map_afganistan.tsx","App.tsx","index.tsx"],"names":["INITIAL_STATE","id","zoom","center","style","bounds","polygonsArr","polygons","zoom_change","area","cellsize","hour","minute","period","rainviewer","overmap","extent","downloadChecked","value","ratio","scale","level","level_name","export_size","seqChecked","name","om","satellite","url","site","om_layers","temp_lyr","toolChange","vybory_lyr","data_type","colors","csv_om","excel","dataset_id","atd_div","visible","status_date","visible_poly","visible_poi","M10","M05","M01","M500","M200","allReducers","combineReducers","layers","state","action","console","log","type","map","l","payload","layerBounds","shapes","checkboxChecked","downloadCheckedButton","areaChecked","cellsizeChecked","hourChecked","minuteChecked","periodChecked","styleChecked","valueChecked","scaleChecked","levelChecked","addSatellite","omChoose","shapefileName","urlChange","downloadFromSite","lyrAdd","colorChecked","store","createStore","currentbounds","actionZoom","newzoom","actionLevel","Afganistan_Layer","props","myStyle","f","color","weight","fillOpacity","fillColor","properties","neutralStyle","data","FeatureGroup","this","GeoJSON","Popup","Table","striped","bordered","hover","name_1","name_2","objectid","status","fetchData","setState","fetch","then","r","json","features","error","React","Component","iconPerson","L","Icon","iconUrl","iconRetinaUrl","iconAnchor","Point","popupAnchor","shadowUrl","shadowSize","shadowAnchor","iconSize","className","icon_red","icon_black","icon_blue","connect","dispatch","bindActionCreators","addBounds","zoomChange","setLevel","icon","Default","imagePath","useRef","additionalLyr","Map","minZoom","maxZoom","onViewportChange","e","WMSTileLayer","transparent","format","Marker","position","Tooltip","offset","opacity","permanent","Card","width","Img","variant","src","Body","Title","Text","Button","href","target","actionTool","tools","actionStatus_Date","actionCenter","newcenter","setTool","setStatus_Date","setZoom","setCenter","click_li","onClick","useState","document","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a06ec21c.chunk.js","sourcesContent":["const INITIAL_STATE = [\n    {\n        id: 'map',\n        zoom: 4,\n        center: [34.532780, 69.165830],\n        style: 'https://api.mapbox.com/styles/v1/valeriabelousova/ckko1s46x69o217o2qi6rtrg2/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoidmFsZXJpYWJlbG91c292YSIsImEiOiJjanBmMmt0c2cwNjQyM3FsZ2gzY2dvemNvIn0.skr82NeiNVFPUi-zxKKqiw',\n        bounds: [],\n        polygonsArr: {},\n        polygons: [],\n        zoom_change: false,\n    },\n    {\n        id: 'radar',\n        area: 'etr',\n        cellsize: 20,\n        hour: 9,\n        minute: 0,\n        period: 1,\n        rainviewer: false,\n        overmap: false,\n        extent: [[28.49, -16.08], [77.5, 110.06]],\n        downloadChecked: false,\n    },\n    {\n        id: 'gismeteo',\n        area: 'mo',\n        extent: false,\n        downloadChecked: false,\n    },\n    {\n        id: 'corona',\n        area: 'rus',\n        style: 'rik',\n        value: 'sick',\n        ratio: false,\n        scale: [5000, 10000, 20000, 40000],\n        downloadChecked: false,\n    },\n    {\n        id: 'basemap',\n        level: 'M10',\n        level_name: '1:100 000 000',\n        style: 'rikNews',\n        export_size: 2000,\n        downloadChecked: false,\n    },\n    {\n        id: 'meteored',\n        area: 'etr_mercator',\n        extent: false,\n        value: 'temperature',\n        downloadChecked: false,\n        seqChecked: false,\n    },\n    {\n        id: 'shapefile',\n        name: 'New_shape',\n        om: 'overmap',\n        satellite: false,\n        downloadChecked: false,\n    },\n    {\n        id: 'hydro',\n        url: 'https://meteoinfo.ru/novosti/17891-gidrologicheskij-obzor-7-aprelya-2021-g',\n        downloadChecked: false,\n    },\n    {\n        id: 'fires',\n        site: false,\n        downloadChecked: false,\n    },\n    {\n        id: 'satellite',\n        om_layers: [],\n        downloadChecked: false,\n    },\n    {\n        id: 'temperature',\n        temp_lyr: false,\n        downloadChecked: false,\n    },\n    {\n        id: 'tools',\n        toolChange: 'Gismeteo',\n    },\n    {\n        id: 'vybory',\n        vybory_lyr: false,\n        data_type: 'gd',\n        value: 'ed_ros',\n        scale: [2, 5, 10, 15],\n        colors: [\"#c9cfec\", \"#82a0dd\", \"#4d58f4\", \"#030fae\", \"#000256\"],\n        csv_om: false,\n        excel: true\n    },\n    {\n        id: 'datamos',\n        dataset_id: 0,\n        atd_div: ['district', 'okruga'],\n        csv_om: false,\n        downloadChecked: false,\n    },\n    {\n        id: 'afganistan',\n        visible: false,\n        status_date: 'neutral',\n        visible_poly: false,\n        visible_poi: false,\n        downloadChecked: false,\n    }\n]\n\ntype tplotOptions = {\n    [key: string]: string\n}\n\nconst level_name : tplotOptions = {\n    M10:\"1:100 000 000\",\n    M05:\"1:50 000 000\",\n    M01:\"1:10 000 000\",\n    M500:\"1:500 000\",\n    M200:\"1:200 000\",\n}\n\nexport default function (state = INITIAL_STATE, action: any) {\n    console.log(action);\n    switch (action.type) {\n        case 'BOUNDS_CHANGE':\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.bounds = action.payload.layerBounds;\n                }\n                return l;\n            });\n        case 'ADD_SHAPES':\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.polygons = action.payload.shapes;\n                }\n                return l;\n            });\n        case 'DELETE_SHAPES':\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.polygons = action.payload.shapes;\n                }\n                return l;\n            });\n        case 'ADD_POLYGONS_ARR':\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.polygonsArr = action.payload.polygonsArr;\n                }\n                return l;\n            });\n        case 'MAP_ZOOM_CHANGE':\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.zoom = action.payload.zoom;\n                }\n                return l;\n            });\n        case 'MAP_CENTER_CHANGE':\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.center = action.payload.center;\n                }\n                return l;\n            });\n        case 'MAP_ZOOM_CHANGE_MANUALLY':\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.zoom_change = action.payload.checkboxChecked;\n                }\n                return l;\n            });\n        case 'RADAR_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'radar') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'RADAR_AREA_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'radar') {\n                    l.area = action.payload.areaChecked;\n                }\n                return l;\n            });\n        case 'RADAR_CELL_SIZE_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'radar') {\n                    l.cellsize = action.payload.cellsizeChecked;\n                }\n                return l;\n            });\n        case 'RADAR_HOUR_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'radar') {\n                    l.hour = action.payload.hourChecked;\n                }\n                return l;\n            });\n        case 'RADAR_MINUTE_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'radar') {\n                    l.minute = action.payload.minuteChecked;\n                }\n                return l;\n            });\n        case 'RADAR_PERIOD_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'radar') {\n                    l.period = action.payload.periodChecked;\n                }\n                return l;\n            });\n        case 'RADAR_RAINVIEWER_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'radar') {\n                    l.rainviewer = action.payload.checkboxChecked;\n                }\n                return l;\n            });\n        case 'GISMETEO_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'gismeteo') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'GISMETEO_AREA_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'gismeteo') {\n                    l.area = action.payload.areaChecked;\n                }\n                return l;\n            });\n        case 'GISMETEO_EXTENT_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'gismeteo') {\n                    l.extent = action.payload.checkboxChecked;\n                }\n                return l;\n            });\n        case 'CORONA_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'corona') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'CORONA_AREA_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'corona') {\n                    l.area = action.payload.areaChecked;\n                }\n                return l;\n            });\n        case 'CORONA_STYLE_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'corona') {\n                    l.style = action.payload.styleChecked;\n                }\n                return l;\n            });\n        case 'CORONA_VALUE_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'corona') {\n                    l.value = action.payload.valueChecked;\n                }\n                return l;\n            });\n        case 'CORONA_CHECKBOX_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'corona') {\n                    l.ratio = action.payload.checkboxChecked;\n                }\n                return l;\n            });\n        case 'CORONA_SCALE_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'corona') {\n                    l.scale = action.payload.scaleChecked;\n                }\n                return l;\n            });\n        case 'BASEMAP_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'basemap') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'BASEMAP_LEVEL_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'basemap') {\n                    l.level = action.payload.levelChecked;\n                    l.level_name = level_name[action.payload.levelChecked]\n                }\n                return l;\n            });\n        case 'BASEMAP_STYLE_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.style = action.payload.style;\n                }\n                return l;\n            });\n        case 'BASEMAP_STYLEEXPORT_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'basemap') {\n                    l.style = action.payload.styleChecked;\n                }\n                return l;\n            });\n        case 'BASEMAP_CHANGE_EXPORT_SIZE':\n                return state.map(l => {\n                    if (l.id === 'basemap') {\n                        l.export_size = action.payload.export_size;\n                    }\n                    return l;\n                });\n        case 'METEORED_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'meteored') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'METEORED_VALUE_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'meteored') {\n                    l.value = action.payload.valueChecked;\n                }\n                return l;\n            });\n        case 'METEORED_AREA_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'meteored') {\n                    l.area = action.payload.areaChecked;\n                }\n                return l;\n            });\n        case 'METEORED_EXTENT_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'meteored') {\n                    l.extent = action.payload.checkboxChecked;\n                }\n                return l;\n            });\n        case 'SHAPEFILE_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'shapefile') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'SHAPEFILE_SAT_ADD':\n            return state.map(l => {\n                if (l.id === 'shapefile') {\n                    l.satellite = action.payload.addSatellite;\n                }\n                return l;\n            });\n        case 'SHAPEFILE_OM_CHANGE':\n            return state.map(l => {\n                if (l.id === 'shapefile') {\n                    l.om = action.payload.omChoose;\n                }\n                return l;\n            });\n        case 'SHAPEFILE_NAME_CHANGE':\n            return state.map(l => {\n                if (l.id === 'shapefile') {\n                    l.name = action.payload.shapefileName;\n                }\n                return l;\n            });\n        case 'SATELLITE_BUTTON_PUSH':\n                return state.map(l => {\n                    if (l.id === 'satellite') {\n                        l.downloadChecked = action.payload.downloadCheckedButton;\n                    }\n                    return l;\n                });\n        case 'SATELLITE_OM_LYR':\n            return state.map(l => {\n                if (l.id === 'satellite') {\n                    l.om_layers = action.payload.om_layers;\n                }\n                return l;\n            });\n        case 'HYDRO_URL_CHANGE':\n            return state.map(l => {\n                if (l.id === 'hydro') {\n                    l.url = action.payload.urlChange;\n                }\n                return l;\n            });\n        case 'HYDRO_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'hydro') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'FIRES_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'fires') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'DOWNLOAD_FROM_SITE':\n            return state.map(l => {\n                if (l.id === 'fires') {\n                    l.site = action.payload.downloadFromSite;\n                }\n                return l;\n            });\n        case 'TEMP_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'temperature') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'TEMP_LYR_ADD':\n            return state.map(l => {\n                if (l.id === 'temperature') {\n                    l.temp_lyr = action.payload.lyrAdd;\n                }\n                return l;\n            });\n        case 'TOOLS_TOOL_CHOOSE':\n                return state.map(l => {\n                    if (l.id === 'tools') {\n                        l.toolChange = action.payload.toolChange;\n                    }\n                    return l;\n                });\n                case 'VYBORY_BUTTON_PUSH':\n                    return state.map(l => {\n                        if (l.id === 'vybory') {\n                            l.downloadChecked = action.payload.downloadCheckedButton;\n                        }\n                        return l;\n                    });\n                case 'VYBORY_AREA_CHOOSE':\n                    return state.map(l => {\n                        if (l.id === 'vybory') {\n                            l.data_type = action.payload.areaChecked;\n                        }\n                        return l;\n                    });\n                case 'VYBORY_STYLE_CHOOSE':\n                    return state.map(l => {\n                        if (l.id === 'vybory') {\n                            l.value = action.payload.styleChecked;\n                        }\n                        return l;\n                    });\n                case 'VYBORY_CHECKBOX_CHOOSE':\n                    return state.map(l => {\n                        if (l.id === 'vybory') {\n                            l.csv_om = action.payload.checkboxChecked;\n                        }\n                        return l;\n                    });\n                case 'VYBORY_SCALE_CHOOSE':\n                    return state.map(l => {\n                        if (l.id === 'vybory') {\n                            l.scale = action.payload.scaleChecked;\n                        }\n                        return l;\n                    });\n                case 'VYBORY_COLOR_CHOOSE':\n                    return state.map(l => {\n                        if (l.id === 'vybory') {\n                            l.colors = action.payload.colorChecked;\n                        }\n                        return l;\n                    });\n                case 'AFGANISTAN_BUTTON_PUSH':\n                    return state.map(l => {\n                        if (l.id === 'afganistan') {\n                            l.visible = action.payload.downloadCheckedButton;\n                        }\n                        return l;\n                    });\n                case 'AFGANISTAN_STATUS_DATE':\n                    return state.map(l => {\n                        if (l.id === 'afganistan') {\n                            l.status_date = action.payload.status_date;\n                        }\n                        return l;\n                    });\n        default:\n            return state\n    }\n    ;\n}\n","import { combineReducers } from 'redux';\nimport LayersReducers from './layers';\n\nconst allReducers = combineReducers({\n    layers: LayersReducers,\n});\n\nexport default allReducers;\n","import { createStore } from 'redux';\nimport allReducers from './reducers';\n\nconst store = createStore(allReducers);\n\nexport default store;\n","export const currentbounds = (bounds:any) => {\n\n    return {\n        type: \"BOUNDS_CHANGE\",\n        payload: { layerBounds: bounds }\n    }\n}\n","export const actionZoom = (newzoom:any) => {\n\n    return {\n        type: \"MAP_ZOOM_CHANGE\",\n        payload: { zoom: newzoom }\n    }\n}","export const actionLevel = (level:string) => {\n    console.log(level)\n\n    return {\n        type: \"BASEMAP_LEVEL_CHOOSE\",\n        payload: { levelChecked: level }\n    }\n}","import React from 'react';\nimport { GeoJSON, FeatureGroup, Popup } from 'react-leaflet';\nimport { Table } from 'react-bootstrap';\nimport { Circle, Tooltip } from 'leaflet';\n//import \"../css/GeojsonLayer.css\"\n\nexport default class Afganistan_Layer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status_date: 'neutral',\n      data: []\n    };\n\n    console.log('contructor poly');\n  }\n\n  myStyle = (f) => {\n    return {\n      color: 'white',\n      weight: 1,\n      fillOpacity: 1,\n      fillColor: f.properties.color,\n    }\n  }\n\n  neutralStyle = (f) => {\n    return {\n      color: '#9ea4c8',\n      weight: 1,\n      fillOpacity: 1,\n      fillColor: 'white',\n    }\n  }\n\n  render() {\n    console.log('render poly');\n\n    //console.info(this.state.data);\n    return (\n      <FeatureGroup>\n        {this.state.data.map(f => {\n          if (this.state.status_date === \"neutral\") {\n          return (<GeoJSON key={f.properties.objectid} data={f} style={this.neutralStyle(f)} >\n             <Popup>\n             <Table striped bordered hover>\n                <tbody>\n                  <tr>\n                    <td>Регион</td>\n                    <td>{f.properties.name_1}</td>\n                  </tr>\n                  <tr>\n                    <td>Район</td>\n                    <td>{f.properties.name_2}</td>\n                  </tr>\n                </tbody>\n              </Table>\n             </Popup>\n             {/*<Tooltip direction=\"right\" offset={[0, 0]} opacity={1} permanent>{f.properties.name_rus}</Tooltip>*/}\n          </GeoJSON>)\n        }\n        else if (this.state.status_date === \"1_may_2021\" ||\n                  this.state.status_date === \"june_2021\" ||\n                  this.state.status_date === \"july_2021\" ||\n                  this.state.status_date === \"august_2021\" ||\n                  this.state.status_date === \"september_2021\"\n                  ) {\n          return (<GeoJSON key={f.properties.objectid} data={f} style={this.myStyle(f)}>\n             <Popup>\n             <Table striped bordered hover>\n                <tbody>\n                  <tr>\n                    <td>Регион</td>\n                    <td>{f.properties.name_1}</td>\n                  </tr>\n                  <tr>\n                    <td>Район</td>\n                    <td>{f.properties.name_2}</td>\n                  </tr>\n                  <tr>\n                    <td>Статус</td>\n                    <td>{f.properties.status}</td>\n                  </tr>\n                </tbody>\n              </Table>\n             </Popup>\n             {/*<Tooltip direction=\"right\" offset={[0, 0]} opacity={1} permanent>{f.properties.name_rus}</Tooltip>*/}\n          </GeoJSON>)\n        }\n      }\n        )}\n      </FeatureGroup>\n    );\n  }\n\n  componentDidMount() {\n    if (this.props.url) {\n      this.fetchData(this.props.url);\n    }\n    this.setState({\n      status_date: this.props.id,\n    });\n    //console.log(this.props);\n  }\n\n  componentWillUnmount() {\n    console.log('will unmount');\n\n  }\n\n  fetchData(url) {\n    let request = fetch(url)\n\n    request\n      .then(r => r.json())\n      .then(data => {\n        this.setState({\n          data: data.features,\n        });\n      }, (error) => {\n        console.error(error);\n      });\n  }\n}","import L from 'leaflet';\n//import Logo from '../../../../public/logo195.png';\n\nconst iconPerson = new L.Icon({\n    iconUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_icon_nato_leave.png\",\n    iconRetinaUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_icon_nato_leave.png\",\n    iconAnchor: new L.Point(50, 82),\n    popupAnchor: new L.Point(160, -15),\n    shadowUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_icon_nato_leave.png\",\n    shadowSize: new L.Point(50, 82),\n    shadowAnchor: new L.Point(50, 82),\n    iconSize: new L.Point(50, 82),\n    className: 'leaflet-div-icon'\n});\n\nexport { iconPerson };","import L from 'leaflet';\n//import Logo from '../../../../public/logo195.png';\n\nconst icon_red = new L.Icon({\n    iconUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_red_cirlce_icon.png\",\n    iconRetinaUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_red_cirlce_icon.png\",\n    iconAnchor: null,\n    popupAnchor: null,\n    shadowUrl: null,\n    shadowSize: null,\n    shadowAnchor: null,\n    iconSize: new L.Point(18, 18),\n    className: 'leaflet-div-icon'\n});\n\nexport { icon_red };","import L from 'leaflet';\n//import Logo from '../../../../public/logo195.png';\n\nconst icon_black = new L.Icon({\n    iconUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_black_circle_icon.png\",\n    iconRetinaUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_black_circle_icon.png\",\n    iconAnchor: null,\n    popupAnchor: null,\n    shadowUrl: null,\n    shadowSize: null,\n    shadowAnchor: null,\n    iconSize: new L.Point(18, 18),\n    className: 'leaflet-div-icon'\n});\n\nexport { icon_black };","import L from 'leaflet';\n//import Logo from '../../../../public/logo195.png';\n\nconst icon_blue = new L.Icon({\n    iconUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_blue_circle_icon.png\",\n    iconRetinaUrl: \"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/afganistan_blue_circle_icon.png\",\n    iconAnchor: null,\n    popupAnchor: null,\n    shadowUrl: null,\n    shadowSize: null,\n    shadowAnchor: null,\n    iconSize: new L.Point(18, 18),\n    className: 'leaflet-div-icon'\n});\n\nexport { icon_blue };","import React, { useRef } from \"react\";\nimport {\n  Map,\n  TileLayer,\n  FeatureGroup,\n  Popup,\n  WMSTileLayer,\n  Marker,\n  SVGOverlay,\n  Circle,\n  Pane,\n  Tooltip,\n} from \"react-leaflet\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { LatLngTuple } from \"leaflet\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { currentbounds } from \"./actions/index\";\nimport { actionZoom } from \"../Cards/Radar/radarActions/changeZoom\";\nimport { actionLevel } from \"../Cards/Basemap/basemapActions/levelChoose\";\nimport GeojsonLayer from \"../Cards/Basemap/Layers\";\nimport Afganistan_Layer from \"./Afganistan_Layer\";\nimport Afganistan_Layer_Poi from \"./Afganistan_Layer_Poi\";\n//import iconPerson from \"./Icon\";\nimport \"./Map.css\";\nimport { idText } from \"typescript\";\nimport L from \"leaflet\";\nimport { iconPerson } from \"./Icon\";\nimport { icon_red } from \"./Icon_red\";\nimport { icon_black } from \"./Icon_black\";\nimport { icon_blue } from \"./Icon_blue\";\n\n// style = 'https://api.mapbox.com/styles/v1/valeriabelousova/ckkgmiumn0idl17qp5eh7nuqh/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoidmFsZXJpYWJlbG91c292YSIsImEiOiJjanBmMmt0c2cwNjQyM3FsZ2gzY2dvemNvIn0.skr82NeiNVFPUi-zxKKqiw'\n// current = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\n//const defaultLatLng: LatLngTuple = [52.865572, 37.283523];\n\nconst AfganistanMap: React.FC = (props: any) => {\n  {\n    props.layers.map((l: any) => {\n      if (l.icon === \"blue\") {\n      }\n    });\n  }\n  L.Icon.Default.imagePath =\n    \"https://raw.githubusercontent.com/ValeriaBelousova/3d-model/master/\";\n  //const [zoom, setZoom] = useState(props.layers[0].zoom)\n  const mapRef = useRef();\n\n  const purpleOptions = { color: \"purple\" };\n\n  const setZoom = (e: any) => {\n    console.log(props.layers[0].zoom);\n    if (e.zoom != props.layers[0].zoom) {\n      props.zoomChange(e.zoom);\n      if (props.layers[0].zoom <= 5 && props.layers[0].zoom_change === false) {\n        props.setLevel(\"M10\");\n      } else if (props.layers[0].zoom > 5 && props.layers[0].zoom <= 7) {\n        props.setLevel(\"M05\");\n      } else if (props.layers[0].zoom > 7 && props.layers[0].zoom <= 10) {\n        props.setLevel(\"M01\");\n      }\n    }\n  };\n  const additionalLyr = {\n    \"1_may_2021\":\n      \"https://geo.emg24.ru/geoserver/publiclayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=publiclayers%3Argnpol_afganistan_1_may_2021&maxFeatures=350&outputFormat=application%2Fjson\",\n    june_2021:\n      \"https://geo.emg24.ru/geoserver/publiclayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=publiclayers%3Aafganistan_june_2021&maxFeatures=350&outputFormat=application%2Fjson\",\n    july_2021:\n      \"https://geo.emg24.ru/geoserver/publiclayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=publiclayers%3Aafganistan_july_2021&maxFeatures=350&outputFormat=application%2Fjson\",\n    august_2021:\n      \"https://geo.emg24.ru/geoserver/publiclayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=publiclayers%3Aafganistan_august_2021&maxFeatures=350&outputFormat=application%2Fjson\",\n    kabul:\n      \"https://geo.emg24.ru/geoserver/publiclayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=publiclayers%3Aafganistan_cities&maxFeatures=50&outputFormat=application%2Fjson\",\n    mazari_sharif: \"\",\n    bagram:\n      \"https://geo.emg24.ru/geoserver/baselayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=baselayers%3Apoppnt11&maxFeatures=50&outputFormat=application%2Fjson\",\n    bazarak: \"\",\n  };\n  const baselayers = { M10: \"baselayers:group_m11\", M05: \"\", M01: \"\" };\n  return (\n    <Map\n      //ref={mapRef}\n      center={props.layers[0].center}\n      zoom={props.layers[0].zoom}\n      minZoom={6}\n      maxZoom={8}\n      onViewportChange={setZoom}\n    >\n      <WMSTileLayer\n        layers={\"baselayers:afganistan_base\"}\n        url=\"https://geo.emg24.ru/geoserver/baselayers/wms\"\n        transparent={true}\n        format={\"image/png\"}\n      />\n      {props.layers.map((l: any) => {\n        {\n          /*if (l.visible===true) { */\n        }\n        let status_date: string = l.status_date;\n        console.log(\"status_date\", status_date);\n        //console.log(L.Icon.Default.imagePath);\n        if (status_date == \"neutral\") {\n          return (\n            <FeatureGroup>\n              {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\n              <Afganistan_Layer\n                key={status_date}\n                id={status_date}\n                url={additionalLyr[\"1_may_2021\"]}\n              />\n              <Marker icon={icon_blue} position={[34.53278, 69.16583]}>\n                <Tooltip\n                  offset={[-5, 10]}\n                  opacity={1}\n                  className={\"blue_tooltip\"}\n                  permanent\n                >\n                  <span>Кабул</span>\n                </Tooltip>\n              </Marker>\n            </FeatureGroup>\n          );\n        }\n        if (status_date == \"1_may_2021\") {\n          return (\n            <FeatureGroup>\n              {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\n              <Afganistan_Layer\n                key={status_date}\n                id={status_date}\n                url={additionalLyr[\"1_may_2021\"]}\n              />\n              <Marker icon={icon_red} position={[34.53278, 69.16583]}>\n                <Tooltip\n                  offset={[-5, 10]}\n                  opacity={1}\n                  className={\"red_tooltip\"}\n                  permanent\n                >\n                  <span>Кабул</span>\n                </Tooltip>\n              </Marker>\n            </FeatureGroup>\n          );\n        } else if (status_date == \"june_2021\") {\n          return (\n            <FeatureGroup>\n              {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\n              <Afganistan_Layer\n                key={status_date}\n                id={status_date}\n                url={additionalLyr[\"june_2021\"]}\n              />\n              <Marker icon={icon_red} position={[34.52023, 69.179961]}>\n                <Tooltip className={\"red_tooltip\"} permanent>\n                  <span>Кабул</span>\n                </Tooltip>\n              </Marker>\n              <Marker icon={icon_black} position={[36.7089, 67.1108]}>\n                <Tooltip className={\"black_tooltip\"} permanent>\n                  <span>Мазари-Шариф</span>\n                </Tooltip>\n              </Marker>\n            </FeatureGroup>\n          );\n        } else if (status_date == \"july_2021\") {\n          return (\n            <FeatureGroup>\n              <Afganistan_Layer\n                key={status_date}\n                id={status_date}\n                url={additionalLyr[\"1_may_2021\"]}\n              />\n              {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\n              <Marker icon={icon_red} position={[34.52023, 69.179961]}>\n                <Tooltip className={\"red_tooltip\"} permanent>\n                  <span>Кабул</span>\n                </Tooltip>\n              </Marker>\n              <Marker icon={iconPerson} position={[34.96667, 69.29278]}>\n                <Popup className={\"icon-leave\"}>\n                  <Card style={{ width: \"18rem\" }}>\n                    <Card.Img\n                      variant=\"top\"\n                      src=\"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/nato.jpg\"\n                    />\n                    <Card.Body>\n                      <Card.Title>Баграм</Card.Title>\n                      <Card.Text>\n                        Последние военные США ушли с авиабазы в Баграме. Почему\n                        это важно и чем опасно?\n                      </Card.Text>\n                      <Button\n                        variant=\"dark\"\n                        //href=\"https://www.bbc.com/russian/news-57684355\"\n                        href=\"https://www.kommersant.ru/doc/4888993\"\n                        target=\"_blank\"\n                      >\n                        Читать\n                      </Button>\n                    </Card.Body>\n                  </Card>\n                </Popup>\n              </Marker>\n            </FeatureGroup>\n          );\n        } else if (status_date == \"august_2021\") {\n          return (\n            <FeatureGroup>\n              <Afganistan_Layer\n                key={status_date}\n                id={status_date}\n                url={additionalLyr[\"august_2021\"]}\n              />\n              {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\n              <Marker icon={icon_black} position={[34.52023, 69.179961]}>\n                <Tooltip className={\"black_tooltip\"} permanent>\n                  <span>Кабул</span>\n                </Tooltip>\n              </Marker>\n            </FeatureGroup>\n          );\n        } else if (status_date == \"september_2021\") {\n          return (\n            <FeatureGroup>\n              <Afganistan_Layer\n                key={status_date}\n                id={status_date}\n                url={additionalLyr[\"august_2021\"]}\n              />\n              {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\n              <Marker icon={icon_red} position={[35.445, 69.752]}>\n                <Tooltip className={\"red_tooltip\"} permanent>\n                  <span>Базарак</span>\n                </Tooltip>\n              </Marker>\n              <Marker icon={icon_black} position={[34.52023, 69.179961]}>\n                <Tooltip className={\"black_tooltip\"} permanent>\n                  <span>Кабул</span>\n                </Tooltip>\n              </Marker>\n            </FeatureGroup>\n          );\n        }\n\n        {\n          /* } */\n        }\n      })}\n      {/*{props.layers.map( (l:any) => {\n              if (l.visible===true) {\n                let status_date:string = l.status_date;\n                  return ( <Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>)\n                  }})}*/}\n    </Map>\n  );\n};\nconst mapStateToProps = (state: any) => {\n  return {\n    layers: state.layers,\n  };\n};\n\nconst matchDispatchToProps = (dispatch: any) => {\n  return bindActionCreators(\n    {\n      addBounds: currentbounds,\n      zoomChange: actionZoom,\n      setLevel: actionLevel,\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, matchDispatchToProps)(AfganistanMap);\n","export const actionTool = (tools:string) => {\n\n    return {\n        type: \"TOOLS_TOOL_CHOOSE\",\n        payload: { toolChange: tools }\n    }\n}\n","export const actionStatus_Date = (value:string) => {\n\n    return {\n        type: \"AFGANISTAN_STATUS_DATE\",\n        payload: { status_date: value }\n    }\n}\n","export const actionCenter = (newcenter:any) => {\n\n    return {\n        type: \"MAP_CENTER_CHANGE\",\n        payload: { center: newcenter }\n    }\n}","import React, {useState} from 'react';\nimport {Button, Accordion, Card, Form} from 'react-bootstrap';\nimport {actionTool} from '../Tools/toolAction/actionTool';\nimport SpinnerForLoading from '../../additional/Spinner/SpinnerForLoading';\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport { pushButton } from \"./actionTest/buttonPush\";\nimport { actionStatus_Date } from './actionTest/actionStatus_Date';\nimport { actionZoom } from \"../Cards/Radar/radarActions/changeZoom\";\nimport { actionCenter } from \"../Cards/Radar/radarActions/changeCenter\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Timeline.css';\n\n\n\nconst Afganistan_Timeline: React.FC = (props: any) => {\n\n    const click_li = (e:any) => {\n        \n        if (e.target.id == 'july_2021') {\n            props.setZoom(7);\n            props.setCenter([35.874495, 68.928351]);\n        }\n        else if (e.target.id == 'september_2021') {\n            props.setZoom(8);\n            props.setCenter([34.994495, 68.928351]);\n        }\n        else if (e.target.id == 'june_2021') {\n            props.setZoom(6.5);\n            props.setCenter([34.674495, 68.928351]);\n        }\n        else if (e.target.id == 'august_2021') {\n            props.setZoom(6.5);\n            props.setCenter([34.674495, 68.928351]);\n        }\n        else if (e.target.id == '1_may_2021' || e.target.id == 'neutral') {\n            props.setCenter([34.008630, 66.000947]);\n            props.setZoom(6);\n            \n        }\n        props.setStatus_Date(e.target.id);\n    }\n     return (\n         <div className='tools'>\n                 <Card.Body>\n                     <div className=\"container mt-0 mb-0\">\n                            <div className=\"row\">\n                                <div className=\"col-md-0 offset-md-0\">\n                                    <h4 onClick={click_li} id=\"neutral\">Война в Афганистане</h4>\n                                    <ul className=\"timeline\">\n                                        <li onClick={click_li} id=\"1_may_2021\">\n                                            <h5 onClick={click_li} id=\"1_may_2021\">1 мая 2021</h5>\n                                            {props.layers.map( (l:any) => {\n                                                if (l.visible===true) {\n                                                    let status_date:string = l.status_date;\n                                                    console.log('status_date', status_date);\n                                                    if (status_date == \"1_may_2021\") {\n                                                    return ( \n                                            <p>Официальная дата окончательного вывода вооружённых сил НАТО</p>)}}})}\n                                        </li>\n                                        <li onClick={click_li} id=\"june_2021\">\n                                            <h5 onClick={click_li} id=\"june_2021\">Июнь 2021</h5>\n                                            {props.layers.map( (l:any) => {\n                                                if (l.visible===true) {\n                                                    let status_date:string = l.status_date;\n                                                    console.log('status_date', status_date);\n                                                    if (status_date == \"june_2021\") {\n                                                    return (\n                                            <p>Активизация Талибан</p>)}}})}\n                                        </li>\n                                        <li onClick={click_li} id=\"july_2021\">\n                                        <h5 onClick={click_li} id=\"july_2021\">Июль 2021</h5>\n                                            {props.layers.map( (l:any) => {\n                                                if (l.visible===true) {\n                                                    let status_date:string = l.status_date;\n                                                    console.log('status_date', status_date);\n                                                    if (status_date == \"july_2021\") {\n                                                    return (\n                                            <p>Войска НАТО покидают Баграм</p>)}}})}\n                                        </li>\n                                        <li onClick={click_li} id=\"august_2021\">\n                                            <h5 onClick={click_li} id=\"august_2021\">Август 2021</h5>\n                                            {props.layers.map( (l:any) => {\n                                                if (l.visible===true) {\n                                                    let status_date:string = l.status_date;\n                                                    console.log('status_date', status_date);\n                                                    if (status_date == \"august_2021\") {\n                                                    return (\n                                            <p>Окружение и взятие Кабула. Бегство президента Ашрафа Гани</p>)}}})}\n                                        </li>\n                                        <li onClick={click_li} id=\"september_2021\">\n                                            <h5 onClick={click_li} id=\"september_2021\">5 сентября 2021</h5>\n                                            {props.layers.map( (l:any) => {\n                                                if (l.visible===true) {\n                                                    let status_date:string = l.status_date;\n                                                    console.log('status_date', status_date);\n                                                    if (status_date == \"september_2021\") {\n                                                    return (\n                                            <p>Силы сопротивления передислоцировались в Панджшер</p>)}}})}\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                 </Card.Body>\n         </div>\n     );\n }\n const mapStateToProps = (state:any) => {\n     return {\n       layers: state.layers\n     }; \n   };\n const matchDispatchToProps = (dispatch:any) => {\n    return bindActionCreators({\n        setTool: actionTool,\n        setStatus_Date: actionStatus_Date,\n        setZoom: actionZoom,\n        setCenter: actionCenter,\n    }, dispatch);\n  };\n \n export default connect(mapStateToProps, matchDispatchToProps)(Afganistan_Timeline);\n","import React, { useState } from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport '../Toolbox.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Afganistan_Timeline from \"../TEST/Afganistan_Timeline\";\n\nconst Toolbox:React.FC = (props:any) => {\n    const [checked, setChecked] = useState(props.layers[1].downloadChecked);\n\n    return (\n        <div className='toolbox'>\n            <Afganistan_Timeline/>    \n        </div>\n    );\n}\nconst mapStateToProps = (state:any) => {\n    return {\n        layers: state.layers\n    };\n};\n\nexport default connect(mapStateToProps)(Toolbox);\n","import React from 'react';\nimport '../App.css';\nimport {connect} from \"react-redux\";\n\n//import Toolbox from './Toolbox/Toolbox';\nimport AfganistanMap from './Toolbox/TEST/Afganistan_Map';\nimport Toolbox from './Toolbox/TEST/AfganistanToolbox';\n\nconst Afganistan:React.FC = (props:any) => {\n    return (\n    <div className='page_iframe'>\n    <Toolbox/>\n        <div className=\"mapAfganistan\">\n          <AfganistanMap/>\n        </div>\n    </div>);\n  }\n  const mapStateToProps = (state:any) => {\n    return {\n      layers: state.layers\n    };\n  };\n  \n  export default connect(mapStateToProps)(Afganistan);","import React from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\nimport Afganistan from './components/map_afganistan';\n\n{/*\nconst App :React.FC = (props:any) => { \n  document.title = \"Geo Server\"\n  return (\n    <div className=\"app\">\n      <Router>\n        <div>\n          <Route exact path=\"/\" component={Main_map} />\n          <Route exact path=\"/afganistan\" component={Afganistan} />\n        </div>\n      </Router>\n    </div>)};\n  */}\n\n\nfunction App() {\n    document.title = \"Geo Server\"\n  return (\n      <div className=\"app\">\n        <Afganistan/>\n      </div>\n  );\n}\n\n\n{/*\nconst App:React.FC = (props:any) => {\n  document.title = \"Geo Server\"\n  return (\n    <div id=\"app\">\n      <Toolbox/>\n      <div id=\"map\">\n      {props.layers.map( (l:any) => {\n        let mode:string = l.toolChange;\n        if (mode === \"Afganistan\") {\n          console.log('new map');\n          return (\n            <AfganistanMap/>\n          )\n        }\n      else if (mode === \"Gismeteo\" || \n              mode === \"temperature\" ||\n              mode === \"hydro\" ||\n              mode === \"fires\" ||\n              mode === \"sat\" ||\n              mode === \"shp\" ||\n              mode === \"meteored\" ||\n              mode === \"corona\" ||\n              mode === \"radar\" ||\n              mode === \"vybory\") {\n        console.log('old map');\n        return (<LeafletMap/>)\n      }})}\n        \n      </div>\n    </div>\n);\n}\n*/}\nconst mapStateToProps = (state:any) => {\n  return {\n    layers: state.layers\n  };\n};\n\nexport default connect(mapStateToProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}