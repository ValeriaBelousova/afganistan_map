[{"/Users/valeriabelousova/work/afganistan_map/src/index.tsx":"1","/Users/valeriabelousova/work/afganistan_map/src/store.tsx":"2","/Users/valeriabelousova/work/afganistan_map/src/App.tsx":"3","/Users/valeriabelousova/work/afganistan_map/src/components/map_afganistan.tsx":"4","/Users/valeriabelousova/work/afganistan_map/src/reducers/index.ts":"5","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/Afganistan_Map.tsx":"6","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/AfganistanToolbox.tsx":"7","/Users/valeriabelousova/work/afganistan_map/src/reducers/layers.ts":"8","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/actions/index.ts":"9","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/Cards/Radar/radarActions/changeZoom.ts":"10","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/Cards/Basemap/basemapActions/levelChoose.ts":"11","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/Afganistan_Timeline.tsx":"12","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/Afganistan_Layer.jsx":"13","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/Icon_black.jsx":"14","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/Icon_blue.jsx":"15","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/Icon.jsx":"16","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/Icon_red.jsx":"17","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/Cards/Radar/radarActions/changeCenter.ts":"18","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/actionTest/actionStatus_Date.ts":"19","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/Tools/toolAction/actionTool.ts":"20"},{"size":643,"mtime":1654101589445,"results":"21","hashOfConfig":"22"},{"size":139,"mtime":1654101589446,"results":"23","hashOfConfig":"22"},{"size":1552,"mtime":1654101589434,"results":"24","hashOfConfig":"22"},{"size":603,"mtime":1654101589444,"results":"25","hashOfConfig":"22"},{"size":180,"mtime":1654101589445,"results":"26","hashOfConfig":"22"},{"size":10705,"mtime":1654101589439,"results":"27","hashOfConfig":"22"},{"size":635,"mtime":1654101589439,"results":"28","hashOfConfig":"22"},{"size":16137,"mtime":1654101589445,"results":"29","hashOfConfig":"22"},{"size":141,"mtime":1654101589441,"results":"30","hashOfConfig":"22"},{"size":134,"mtime":1654101589438,"results":"31","hashOfConfig":"22"},{"size":170,"mtime":1654101589435,"results":"32","hashOfConfig":"22"},{"size":6868,"mtime":1654101589439,"results":"33","hashOfConfig":"22"},{"size":3296,"mtime":1654101589439,"results":"34","hashOfConfig":"22"},{"size":559,"mtime":1654101589440,"results":"35","hashOfConfig":"22"},{"size":555,"mtime":1654101589440,"results":"36","hashOfConfig":"22"},{"size":713,"mtime":1654101589439,"results":"37","hashOfConfig":"22"},{"size":551,"mtime":1654101589440,"results":"38","hashOfConfig":"22"},{"size":144,"mtime":1654101589438,"results":"39","hashOfConfig":"22"},{"size":155,"mtime":1654101589441,"results":"40","hashOfConfig":"22"},{"size":142,"mtime":1654101589444,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11q4tye",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/valeriabelousova/work/afganistan_map/src/index.tsx",[],"/Users/valeriabelousova/work/afganistan_map/src/store.tsx",[],"/Users/valeriabelousova/work/afganistan_map/src/App.tsx",["88","89"],"import React from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\nimport Afganistan from './components/map_afganistan';\n\n{/*\nconst App :React.FC = (props:any) => { \n  document.title = \"Geo Server\"\n  return (\n    <div className=\"app\">\n      <Router>\n        <div>\n          <Route exact path=\"/\" component={Main_map} />\n          <Route exact path=\"/afganistan\" component={Afganistan} />\n        </div>\n      </Router>\n    </div>)};\n  */}\n\n\nfunction App() {\n    document.title = \"Geo Server\"\n  return (\n      <div className=\"app\">\n        <Afganistan/>\n      </div>\n  );\n}\n\n\n{/*\nconst App:React.FC = (props:any) => {\n  document.title = \"Geo Server\"\n  return (\n    <div id=\"app\">\n      <Toolbox/>\n      <div id=\"map\">\n      {props.layers.map( (l:any) => {\n        let mode:string = l.toolChange;\n        if (mode === \"Afganistan\") {\n          console.log('new map');\n          return (\n            <AfganistanMap/>\n          )\n        }\n      else if (mode === \"Gismeteo\" || \n              mode === \"temperature\" ||\n              mode === \"hydro\" ||\n              mode === \"fires\" ||\n              mode === \"sat\" ||\n              mode === \"shp\" ||\n              mode === \"meteored\" ||\n              mode === \"corona\" ||\n              mode === \"radar\" ||\n              mode === \"vybory\") {\n        console.log('old map');\n        return (<LeafletMap/>)\n      }})}\n        \n      </div>\n    </div>\n);\n}\n*/}\nconst mapStateToProps = (state:any) => {\n  return {\n    layers: state.layers\n  };\n};\n\nexport default connect(mapStateToProps)(App);","/Users/valeriabelousova/work/afganistan_map/src/components/map_afganistan.tsx",[],"/Users/valeriabelousova/work/afganistan_map/src/reducers/index.ts",[],"/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/Afganistan_Map.tsx",["90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119"],"import React, { useRef } from \"react\";\nimport {\n  Map,\n  TileLayer,\n  FeatureGroup,\n  Popup,\n  WMSTileLayer,\n  Marker,\n  SVGOverlay,\n  Circle,\n  Pane,\n  Tooltip,\n} from \"react-leaflet\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { LatLngTuple } from \"leaflet\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { currentbounds } from \"./actions/index\";\nimport { actionZoom } from \"../Cards/Radar/radarActions/changeZoom\";\nimport { actionLevel } from \"../Cards/Basemap/basemapActions/levelChoose\";\nimport GeojsonLayer from \"../Cards/Basemap/Layers\";\nimport Afganistan_Layer from \"./Afganistan_Layer\";\nimport Afganistan_Layer_Poi from \"./Afganistan_Layer_Poi\";\n//import iconPerson from \"./Icon\";\nimport \"./Map.css\";\nimport { idText } from \"typescript\";\nimport L from \"leaflet\";\nimport { iconPerson } from \"./Icon\";\nimport { icon_red } from \"./Icon_red\";\nimport { icon_black } from \"./Icon_black\";\nimport { icon_blue } from \"./Icon_blue\";\n\n// style = 'https://api.mapbox.com/styles/v1/valeriabelousova/ckkgmiumn0idl17qp5eh7nuqh/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoidmFsZXJpYWJlbG91c292YSIsImEiOiJjanBmMmt0c2cwNjQyM3FsZ2gzY2dvemNvIn0.skr82NeiNVFPUi-zxKKqiw'\n// current = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\n//const defaultLatLng: LatLngTuple = [52.865572, 37.283523];\n\nconst AfganistanMap: React.FC = (props: any) => {\n  {\n    props.layers.map((l: any) => {\n      if (l.icon === \"blue\") {\n      }\n    });\n  }\n  L.Icon.Default.imagePath =\n    \"https://raw.githubusercontent.com/ValeriaBelousova/3d-model/master/\";\n  //const [zoom, setZoom] = useState(props.layers[0].zoom)\n  const mapRef = useRef();\n\n  const purpleOptions = { color: \"purple\" };\n\n  const setZoom = (e: any) => {\n    console.log(props.layers[0].zoom);\n    if (e.zoom != props.layers[0].zoom) {\n      props.zoomChange(e.zoom);\n      if (props.layers[0].zoom <= 5 && props.layers[0].zoom_change === false) {\n        props.setLevel(\"M10\");\n      } else if (props.layers[0].zoom > 5 && props.layers[0].zoom <= 7) {\n        props.setLevel(\"M05\");\n      } else if (props.layers[0].zoom > 7 && props.layers[0].zoom <= 10) {\n        props.setLevel(\"M01\");\n      }\n    }\n  };\n  const additionalLyr = {\n    \"1_may_2021\":\n      \"https://geo.emg24.ru/geoserver/publiclayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=publiclayers%3Argnpol_afganistan_1_may_2021&maxFeatures=350&outputFormat=application%2Fjson\",\n    june_2021:\n      \"https://geo.emg24.ru/geoserver/publiclayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=publiclayers%3Aafganistan_june_2021&maxFeatures=350&outputFormat=application%2Fjson\",\n    july_2021:\n      \"https://geo.emg24.ru/geoserver/publiclayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=publiclayers%3Aafganistan_july_2021&maxFeatures=350&outputFormat=application%2Fjson\",\n    august_2021:\n      \"https://geo.emg24.ru/geoserver/publiclayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=publiclayers%3Aafganistan_august_2021&maxFeatures=350&outputFormat=application%2Fjson\",\n    kabul:\n      \"https://geo.emg24.ru/geoserver/publiclayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=publiclayers%3Aafganistan_cities&maxFeatures=50&outputFormat=application%2Fjson\",\n    mazari_sharif: \"\",\n    bagram:\n      \"https://geo.emg24.ru/geoserver/baselayers/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=baselayers%3Apoppnt11&maxFeatures=50&outputFormat=application%2Fjson\",\n    bazarak: \"\",\n  };\n  const baselayers = { M10: \"baselayers:group_m11\", M05: \"\", M01: \"\" };\n  return (\n    <Map\n      //ref={mapRef}\n      center={props.layers[0].center}\n      zoom={props.layers[0].zoom}\n      minZoom={6}\n      maxZoom={8}\n      onViewportChange={setZoom}\n    >\n      <WMSTileLayer\n        layers={\"baselayers:afganistan_base\"}\n        url=\"https://geo.emg24.ru/geoserver/baselayers/wms\"\n        transparent={true}\n        format={\"image/png\"}\n      />\n      {props.layers.map((l: any) => {\n        {\n          /*if (l.visible===true) { */\n        }\n        let status_date: string = l.status_date;\n        console.log(\"status_date\", status_date);\n        //console.log(L.Icon.Default.imagePath);\n        if (status_date == \"neutral\") {\n          return (\n            <FeatureGroup>\n              {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\n              <Afganistan_Layer\n                key={status_date}\n                id={status_date}\n                url={additionalLyr[\"1_may_2021\"]}\n              />\n              <Marker icon={icon_blue} position={[34.53278, 69.16583]}>\n                <Tooltip\n                  offset={[-5, 10]}\n                  opacity={1}\n                  className={\"blue_tooltip\"}\n                  permanent\n                >\n                  <span>Кабул</span>\n                </Tooltip>\n              </Marker>\n            </FeatureGroup>\n          );\n        }\n        if (status_date == \"1_may_2021\") {\n          return (\n            <FeatureGroup>\n              {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\n              <Afganistan_Layer\n                key={status_date}\n                id={status_date}\n                url={additionalLyr[\"1_may_2021\"]}\n              />\n              <Marker icon={icon_red} position={[34.53278, 69.16583]}>\n                <Tooltip\n                  offset={[-5, 10]}\n                  opacity={1}\n                  className={\"red_tooltip\"}\n                  permanent\n                >\n                  <span>Кабул</span>\n                </Tooltip>\n              </Marker>\n            </FeatureGroup>\n          );\n        } else if (status_date == \"june_2021\") {\n          return (\n            <FeatureGroup>\n              {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\n              <Afganistan_Layer\n                key={status_date}\n                id={status_date}\n                url={additionalLyr[\"june_2021\"]}\n              />\n              <Marker icon={icon_red} position={[34.52023, 69.179961]}>\n                <Tooltip className={\"red_tooltip\"} permanent>\n                  <span>Кабул</span>\n                </Tooltip>\n              </Marker>\n              <Marker icon={icon_black} position={[36.7089, 67.1108]}>\n                <Tooltip className={\"black_tooltip\"} permanent>\n                  <span>Мазари-Шариф</span>\n                </Tooltip>\n              </Marker>\n            </FeatureGroup>\n          );\n        } else if (status_date == \"july_2021\") {\n          return (\n            <FeatureGroup>\n              <Afganistan_Layer\n                key={status_date}\n                id={status_date}\n                url={additionalLyr[\"1_may_2021\"]}\n              />\n              {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\n              <Marker icon={icon_red} position={[34.52023, 69.179961]}>\n                <Tooltip className={\"red_tooltip\"} permanent>\n                  <span>Кабул</span>\n                </Tooltip>\n              </Marker>\n              <Marker icon={iconPerson} position={[34.96667, 69.29278]}>\n                <Popup className={\"icon-leave\"}>\n                  <Card style={{ width: \"18rem\" }}>\n                    <Card.Img\n                      variant=\"top\"\n                      src=\"https://raw.githubusercontent.com/ValeriaBelousova/json_data/master/nato.jpg\"\n                    />\n                    <Card.Body>\n                      <Card.Title>Баграм</Card.Title>\n                      <Card.Text>\n                        Последние военные США ушли с авиабазы в Баграме. Почему\n                        это важно и чем опасно?\n                      </Card.Text>\n                      <Button\n                        variant=\"dark\"\n                        //href=\"https://www.bbc.com/russian/news-57684355\"\n                        href=\"https://www.kommersant.ru/doc/4888993\"\n                        target=\"_blank\"\n                      >\n                        Читать\n                      </Button>\n                    </Card.Body>\n                  </Card>\n                </Popup>\n              </Marker>\n            </FeatureGroup>\n          );\n        } else if (status_date == \"august_2021\") {\n          return (\n            <FeatureGroup>\n              <Afganistan_Layer\n                key={status_date}\n                id={status_date}\n                url={additionalLyr[\"august_2021\"]}\n              />\n              {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\n              <Marker icon={icon_black} position={[34.52023, 69.179961]}>\n                <Tooltip className={\"black_tooltip\"} permanent>\n                  <span>Кабул</span>\n                </Tooltip>\n              </Marker>\n            </FeatureGroup>\n          );\n        } else if (status_date == \"september_2021\") {\n          return (\n            <FeatureGroup>\n              <Afganistan_Layer\n                key={status_date}\n                id={status_date}\n                url={additionalLyr[\"august_2021\"]}\n              />\n              {/*<Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>*/}\n              <Marker icon={icon_red} position={[35.445, 69.752]}>\n                <Tooltip className={\"red_tooltip\"} permanent>\n                  <span>Базарак</span>\n                </Tooltip>\n              </Marker>\n              <Marker icon={icon_black} position={[34.52023, 69.179961]}>\n                <Tooltip className={\"black_tooltip\"} permanent>\n                  <span>Кабул</span>\n                </Tooltip>\n              </Marker>\n            </FeatureGroup>\n          );\n        }\n\n        {\n          /* } */\n        }\n      })}\n      {/*{props.layers.map( (l:any) => {\n              if (l.visible===true) {\n                let status_date:string = l.status_date;\n                  return ( <Afganistan_Layer_Poi key={status_date} id={status_date} url={additionalLyr[\"kabul\"]}/>)\n                  }})}*/}\n    </Map>\n  );\n};\nconst mapStateToProps = (state: any) => {\n  return {\n    layers: state.layers,\n  };\n};\n\nconst matchDispatchToProps = (dispatch: any) => {\n  return bindActionCreators(\n    {\n      addBounds: currentbounds,\n      zoomChange: actionZoom,\n      setLevel: actionLevel,\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, matchDispatchToProps)(AfganistanMap);\n","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/AfganistanToolbox.tsx",["120","121","122","123"],"import React, { useState } from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport '../Toolbox.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Afganistan_Timeline from \"../TEST/Afganistan_Timeline\";\n\nconst Toolbox:React.FC = (props:any) => {\n    const [checked, setChecked] = useState(props.layers[1].downloadChecked);\n\n    return (\n        <div className='toolbox'>\n            <Afganistan_Timeline/>    \n        </div>\n    );\n}\nconst mapStateToProps = (state:any) => {\n    return {\n        layers: state.layers\n    };\n};\n\nexport default connect(mapStateToProps)(Toolbox);\n","/Users/valeriabelousova/work/afganistan_map/src/reducers/layers.ts",["124"],"const INITIAL_STATE = [\n    {\n        id: 'map',\n        zoom: 4,\n        center: [34.532780, 69.165830],\n        style: 'https://api.mapbox.com/styles/v1/valeriabelousova/ckko1s46x69o217o2qi6rtrg2/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoidmFsZXJpYWJlbG91c292YSIsImEiOiJjanBmMmt0c2cwNjQyM3FsZ2gzY2dvemNvIn0.skr82NeiNVFPUi-zxKKqiw',\n        bounds: [],\n        polygonsArr: {},\n        polygons: [],\n        zoom_change: false,\n    },\n    {\n        id: 'radar',\n        area: 'etr',\n        cellsize: 20,\n        hour: 9,\n        minute: 0,\n        period: 1,\n        rainviewer: false,\n        overmap: false,\n        extent: [[28.49, -16.08], [77.5, 110.06]],\n        downloadChecked: false,\n    },\n    {\n        id: 'gismeteo',\n        area: 'mo',\n        extent: false,\n        downloadChecked: false,\n    },\n    {\n        id: 'corona',\n        area: 'rus',\n        style: 'rik',\n        value: 'sick',\n        ratio: false,\n        scale: [5000, 10000, 20000, 40000],\n        downloadChecked: false,\n    },\n    {\n        id: 'basemap',\n        level: 'M10',\n        level_name: '1:100 000 000',\n        style: 'rikNews',\n        export_size: 2000,\n        downloadChecked: false,\n    },\n    {\n        id: 'meteored',\n        area: 'etr_mercator',\n        extent: false,\n        value: 'temperature',\n        downloadChecked: false,\n        seqChecked: false,\n    },\n    {\n        id: 'shapefile',\n        name: 'New_shape',\n        om: 'overmap',\n        satellite: false,\n        downloadChecked: false,\n    },\n    {\n        id: 'hydro',\n        url: 'https://meteoinfo.ru/novosti/17891-gidrologicheskij-obzor-7-aprelya-2021-g',\n        downloadChecked: false,\n    },\n    {\n        id: 'fires',\n        site: false,\n        downloadChecked: false,\n    },\n    {\n        id: 'satellite',\n        om_layers: [],\n        downloadChecked: false,\n    },\n    {\n        id: 'temperature',\n        temp_lyr: false,\n        downloadChecked: false,\n    },\n    {\n        id: 'tools',\n        toolChange: 'Gismeteo',\n    },\n    {\n        id: 'vybory',\n        vybory_lyr: false,\n        data_type: 'gd',\n        value: 'ed_ros',\n        scale: [2, 5, 10, 15],\n        colors: [\"#c9cfec\", \"#82a0dd\", \"#4d58f4\", \"#030fae\", \"#000256\"],\n        csv_om: false,\n        excel: true\n    },\n    {\n        id: 'datamos',\n        dataset_id: 0,\n        atd_div: ['district', 'okruga'],\n        csv_om: false,\n        downloadChecked: false,\n    },\n    {\n        id: 'afganistan',\n        visible: false,\n        status_date: 'neutral',\n        visible_poly: false,\n        visible_poi: false,\n        downloadChecked: false,\n    }\n]\n\ntype tplotOptions = {\n    [key: string]: string\n}\n\nconst level_name : tplotOptions = {\n    M10:\"1:100 000 000\",\n    M05:\"1:50 000 000\",\n    M01:\"1:10 000 000\",\n    M500:\"1:500 000\",\n    M200:\"1:200 000\",\n}\n\nexport default function (state = INITIAL_STATE, action: any) {\n    console.log(action);\n    switch (action.type) {\n        case 'BOUNDS_CHANGE':\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.bounds = action.payload.layerBounds;\n                }\n                return l;\n            });\n        case 'ADD_SHAPES':\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.polygons = action.payload.shapes;\n                }\n                return l;\n            });\n        case 'DELETE_SHAPES':\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.polygons = action.payload.shapes;\n                }\n                return l;\n            });\n        case 'ADD_POLYGONS_ARR':\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.polygonsArr = action.payload.polygonsArr;\n                }\n                return l;\n            });\n        case 'MAP_ZOOM_CHANGE':\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.zoom = action.payload.zoom;\n                }\n                return l;\n            });\n        case 'MAP_CENTER_CHANGE':\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.center = action.payload.center;\n                }\n                return l;\n            });\n        case 'MAP_ZOOM_CHANGE_MANUALLY':\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.zoom_change = action.payload.checkboxChecked;\n                }\n                return l;\n            });\n        case 'RADAR_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'radar') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'RADAR_AREA_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'radar') {\n                    l.area = action.payload.areaChecked;\n                }\n                return l;\n            });\n        case 'RADAR_CELL_SIZE_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'radar') {\n                    l.cellsize = action.payload.cellsizeChecked;\n                }\n                return l;\n            });\n        case 'RADAR_HOUR_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'radar') {\n                    l.hour = action.payload.hourChecked;\n                }\n                return l;\n            });\n        case 'RADAR_MINUTE_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'radar') {\n                    l.minute = action.payload.minuteChecked;\n                }\n                return l;\n            });\n        case 'RADAR_PERIOD_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'radar') {\n                    l.period = action.payload.periodChecked;\n                }\n                return l;\n            });\n        case 'RADAR_RAINVIEWER_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'radar') {\n                    l.rainviewer = action.payload.checkboxChecked;\n                }\n                return l;\n            });\n        case 'GISMETEO_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'gismeteo') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'GISMETEO_AREA_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'gismeteo') {\n                    l.area = action.payload.areaChecked;\n                }\n                return l;\n            });\n        case 'GISMETEO_EXTENT_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'gismeteo') {\n                    l.extent = action.payload.checkboxChecked;\n                }\n                return l;\n            });\n        case 'CORONA_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'corona') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'CORONA_AREA_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'corona') {\n                    l.area = action.payload.areaChecked;\n                }\n                return l;\n            });\n        case 'CORONA_STYLE_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'corona') {\n                    l.style = action.payload.styleChecked;\n                }\n                return l;\n            });\n        case 'CORONA_VALUE_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'corona') {\n                    l.value = action.payload.valueChecked;\n                }\n                return l;\n            });\n        case 'CORONA_CHECKBOX_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'corona') {\n                    l.ratio = action.payload.checkboxChecked;\n                }\n                return l;\n            });\n        case 'CORONA_SCALE_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'corona') {\n                    l.scale = action.payload.scaleChecked;\n                }\n                return l;\n            });\n        case 'BASEMAP_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'basemap') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'BASEMAP_LEVEL_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'basemap') {\n                    l.level = action.payload.levelChecked;\n                    l.level_name = level_name[action.payload.levelChecked]\n                }\n                return l;\n            });\n        case 'BASEMAP_STYLE_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'map') {\n                    l.style = action.payload.style;\n                }\n                return l;\n            });\n        case 'BASEMAP_STYLEEXPORT_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'basemap') {\n                    l.style = action.payload.styleChecked;\n                }\n                return l;\n            });\n        case 'BASEMAP_CHANGE_EXPORT_SIZE':\n                return state.map(l => {\n                    if (l.id === 'basemap') {\n                        l.export_size = action.payload.export_size;\n                    }\n                    return l;\n                });\n        case 'METEORED_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'meteored') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'METEORED_VALUE_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'meteored') {\n                    l.value = action.payload.valueChecked;\n                }\n                return l;\n            });\n        case 'METEORED_AREA_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'meteored') {\n                    l.area = action.payload.areaChecked;\n                }\n                return l;\n            });\n        case 'METEORED_EXTENT_CHOOSE':\n            return state.map(l => {\n                if (l.id === 'meteored') {\n                    l.extent = action.payload.checkboxChecked;\n                }\n                return l;\n            });\n        case 'SHAPEFILE_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'shapefile') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'SHAPEFILE_SAT_ADD':\n            return state.map(l => {\n                if (l.id === 'shapefile') {\n                    l.satellite = action.payload.addSatellite;\n                }\n                return l;\n            });\n        case 'SHAPEFILE_OM_CHANGE':\n            return state.map(l => {\n                if (l.id === 'shapefile') {\n                    l.om = action.payload.omChoose;\n                }\n                return l;\n            });\n        case 'SHAPEFILE_NAME_CHANGE':\n            return state.map(l => {\n                if (l.id === 'shapefile') {\n                    l.name = action.payload.shapefileName;\n                }\n                return l;\n            });\n        case 'SATELLITE_BUTTON_PUSH':\n                return state.map(l => {\n                    if (l.id === 'satellite') {\n                        l.downloadChecked = action.payload.downloadCheckedButton;\n                    }\n                    return l;\n                });\n        case 'SATELLITE_OM_LYR':\n            return state.map(l => {\n                if (l.id === 'satellite') {\n                    l.om_layers = action.payload.om_layers;\n                }\n                return l;\n            });\n        case 'HYDRO_URL_CHANGE':\n            return state.map(l => {\n                if (l.id === 'hydro') {\n                    l.url = action.payload.urlChange;\n                }\n                return l;\n            });\n        case 'HYDRO_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'hydro') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'FIRES_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'fires') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'DOWNLOAD_FROM_SITE':\n            return state.map(l => {\n                if (l.id === 'fires') {\n                    l.site = action.payload.downloadFromSite;\n                }\n                return l;\n            });\n        case 'TEMP_BUTTON_PUSH':\n            return state.map(l => {\n                if (l.id === 'temperature') {\n                    l.downloadChecked = action.payload.downloadCheckedButton;\n                }\n                return l;\n            });\n        case 'TEMP_LYR_ADD':\n            return state.map(l => {\n                if (l.id === 'temperature') {\n                    l.temp_lyr = action.payload.lyrAdd;\n                }\n                return l;\n            });\n        case 'TOOLS_TOOL_CHOOSE':\n                return state.map(l => {\n                    if (l.id === 'tools') {\n                        l.toolChange = action.payload.toolChange;\n                    }\n                    return l;\n                });\n                case 'VYBORY_BUTTON_PUSH':\n                    return state.map(l => {\n                        if (l.id === 'vybory') {\n                            l.downloadChecked = action.payload.downloadCheckedButton;\n                        }\n                        return l;\n                    });\n                case 'VYBORY_AREA_CHOOSE':\n                    return state.map(l => {\n                        if (l.id === 'vybory') {\n                            l.data_type = action.payload.areaChecked;\n                        }\n                        return l;\n                    });\n                case 'VYBORY_STYLE_CHOOSE':\n                    return state.map(l => {\n                        if (l.id === 'vybory') {\n                            l.value = action.payload.styleChecked;\n                        }\n                        return l;\n                    });\n                case 'VYBORY_CHECKBOX_CHOOSE':\n                    return state.map(l => {\n                        if (l.id === 'vybory') {\n                            l.csv_om = action.payload.checkboxChecked;\n                        }\n                        return l;\n                    });\n                case 'VYBORY_SCALE_CHOOSE':\n                    return state.map(l => {\n                        if (l.id === 'vybory') {\n                            l.scale = action.payload.scaleChecked;\n                        }\n                        return l;\n                    });\n                case 'VYBORY_COLOR_CHOOSE':\n                    return state.map(l => {\n                        if (l.id === 'vybory') {\n                            l.colors = action.payload.colorChecked;\n                        }\n                        return l;\n                    });\n                case 'AFGANISTAN_BUTTON_PUSH':\n                    return state.map(l => {\n                        if (l.id === 'afganistan') {\n                            l.visible = action.payload.downloadCheckedButton;\n                        }\n                        return l;\n                    });\n                case 'AFGANISTAN_STATUS_DATE':\n                    return state.map(l => {\n                        if (l.id === 'afganistan') {\n                            l.status_date = action.payload.status_date;\n                        }\n                        return l;\n                    });\n        default:\n            return state\n    }\n    ;\n}\n","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/actions/index.ts",[],"/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/Cards/Radar/radarActions/changeZoom.ts",[],"/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/Cards/Basemap/basemapActions/levelChoose.ts",[],"/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/Afganistan_Timeline.tsx",["125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146"],"import React, {useState} from 'react';\nimport {Button, Accordion, Card, Form} from 'react-bootstrap';\nimport {actionTool} from '../Tools/toolAction/actionTool';\nimport SpinnerForLoading from '../../additional/Spinner/SpinnerForLoading';\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport { pushButton } from \"./actionTest/buttonPush\";\nimport { actionStatus_Date } from './actionTest/actionStatus_Date';\nimport { actionZoom } from \"../Cards/Radar/radarActions/changeZoom\";\nimport { actionCenter } from \"../Cards/Radar/radarActions/changeCenter\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Timeline.css';\n\n\n\nconst Afganistan_Timeline: React.FC = (props: any) => {\n\n    const click_li = (e:any) => {\n        \n        if (e.target.id == 'july_2021') {\n            props.setZoom(7);\n            props.setCenter([35.874495, 68.928351]);\n        }\n        else if (e.target.id == 'september_2021') {\n            props.setZoom(8);\n            props.setCenter([34.994495, 68.928351]);\n        }\n        else if (e.target.id == 'june_2021') {\n            props.setZoom(6.5);\n            props.setCenter([34.674495, 68.928351]);\n        }\n        else if (e.target.id == 'august_2021') {\n            props.setZoom(6.5);\n            props.setCenter([34.674495, 68.928351]);\n        }\n        else if (e.target.id == '1_may_2021' || e.target.id == 'neutral') {\n            props.setCenter([34.008630, 66.000947]);\n            props.setZoom(6);\n            \n        }\n        props.setStatus_Date(e.target.id);\n    }\n     return (\n         <div className='tools'>\n                 <Card.Body>\n                     <div className=\"container mt-0 mb-0\">\n                            <div className=\"row\">\n                                <div className=\"col-md-0 offset-md-0\">\n                                    <h4 onClick={click_li} id=\"neutral\">Война в Афганистане</h4>\n                                    <ul className=\"timeline\">\n                                        <li onClick={click_li} id=\"1_may_2021\">\n                                            <h5 onClick={click_li} id=\"1_may_2021\">1 мая 2021</h5>\n                                            {props.layers.map( (l:any) => {\n                                                if (l.visible===true) {\n                                                    let status_date:string = l.status_date;\n                                                    console.log('status_date', status_date);\n                                                    if (status_date == \"1_may_2021\") {\n                                                    return ( \n                                            <p>Официальная дата окончательного вывода вооружённых сил НАТО</p>)}}})}\n                                        </li>\n                                        <li onClick={click_li} id=\"june_2021\">\n                                            <h5 onClick={click_li} id=\"june_2021\">Июнь 2021</h5>\n                                            {props.layers.map( (l:any) => {\n                                                if (l.visible===true) {\n                                                    let status_date:string = l.status_date;\n                                                    console.log('status_date', status_date);\n                                                    if (status_date == \"june_2021\") {\n                                                    return (\n                                            <p>Активизация Талибан</p>)}}})}\n                                        </li>\n                                        <li onClick={click_li} id=\"july_2021\">\n                                        <h5 onClick={click_li} id=\"july_2021\">Июль 2021</h5>\n                                            {props.layers.map( (l:any) => {\n                                                if (l.visible===true) {\n                                                    let status_date:string = l.status_date;\n                                                    console.log('status_date', status_date);\n                                                    if (status_date == \"july_2021\") {\n                                                    return (\n                                            <p>Войска НАТО покидают Баграм</p>)}}})}\n                                        </li>\n                                        <li onClick={click_li} id=\"august_2021\">\n                                            <h5 onClick={click_li} id=\"august_2021\">Август 2021</h5>\n                                            {props.layers.map( (l:any) => {\n                                                if (l.visible===true) {\n                                                    let status_date:string = l.status_date;\n                                                    console.log('status_date', status_date);\n                                                    if (status_date == \"august_2021\") {\n                                                    return (\n                                            <p>Окружение и взятие Кабула. Бегство президента Ашрафа Гани</p>)}}})}\n                                        </li>\n                                        <li onClick={click_li} id=\"september_2021\">\n                                            <h5 onClick={click_li} id=\"september_2021\">5 сентября 2021</h5>\n                                            {props.layers.map( (l:any) => {\n                                                if (l.visible===true) {\n                                                    let status_date:string = l.status_date;\n                                                    console.log('status_date', status_date);\n                                                    if (status_date == \"september_2021\") {\n                                                    return (\n                                            <p>Силы сопротивления передислоцировались в Панджшер</p>)}}})}\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                 </Card.Body>\n         </div>\n     );\n }\n const mapStateToProps = (state:any) => {\n     return {\n       layers: state.layers\n     }; \n   };\n const matchDispatchToProps = (dispatch:any) => {\n    return bindActionCreators({\n        setTool: actionTool,\n        setStatus_Date: actionStatus_Date,\n        setZoom: actionZoom,\n        setCenter: actionCenter,\n    }, dispatch);\n  };\n \n export default connect(mapStateToProps, matchDispatchToProps)(Afganistan_Timeline);\n","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/Afganistan_Layer.jsx",["147","148","149"],"import React from 'react';\nimport { GeoJSON, FeatureGroup, Popup } from 'react-leaflet';\nimport { Table } from 'react-bootstrap';\nimport { Circle, Tooltip } from 'leaflet';\n//import \"../css/GeojsonLayer.css\"\n\nexport default class Afganistan_Layer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status_date: 'neutral',\n      data: []\n    };\n\n    console.log('contructor poly');\n  }\n\n  myStyle = (f) => {\n    return {\n      color: 'white',\n      weight: 1,\n      fillOpacity: 1,\n      fillColor: f.properties.color,\n    }\n  }\n\n  neutralStyle = (f) => {\n    return {\n      color: '#9ea4c8',\n      weight: 1,\n      fillOpacity: 1,\n      fillColor: 'white',\n    }\n  }\n\n  render() {\n    console.log('render poly');\n\n    //console.info(this.state.data);\n    return (\n      <FeatureGroup>\n        {this.state.data.map(f => {\n          if (this.state.status_date === \"neutral\") {\n          return (<GeoJSON key={f.properties.objectid} data={f} style={this.neutralStyle(f)} >\n             <Popup>\n             <Table striped bordered hover>\n                <tbody>\n                  <tr>\n                    <td>Регион</td>\n                    <td>{f.properties.name_1}</td>\n                  </tr>\n                  <tr>\n                    <td>Район</td>\n                    <td>{f.properties.name_2}</td>\n                  </tr>\n                </tbody>\n              </Table>\n             </Popup>\n             {/*<Tooltip direction=\"right\" offset={[0, 0]} opacity={1} permanent>{f.properties.name_rus}</Tooltip>*/}\n          </GeoJSON>)\n        }\n        else if (this.state.status_date === \"1_may_2021\" ||\n                  this.state.status_date === \"june_2021\" ||\n                  this.state.status_date === \"july_2021\" ||\n                  this.state.status_date === \"august_2021\" ||\n                  this.state.status_date === \"september_2021\"\n                  ) {\n          return (<GeoJSON key={f.properties.objectid} data={f} style={this.myStyle(f)}>\n             <Popup>\n             <Table striped bordered hover>\n                <tbody>\n                  <tr>\n                    <td>Регион</td>\n                    <td>{f.properties.name_1}</td>\n                  </tr>\n                  <tr>\n                    <td>Район</td>\n                    <td>{f.properties.name_2}</td>\n                  </tr>\n                  <tr>\n                    <td>Статус</td>\n                    <td>{f.properties.status}</td>\n                  </tr>\n                </tbody>\n              </Table>\n             </Popup>\n             {/*<Tooltip direction=\"right\" offset={[0, 0]} opacity={1} permanent>{f.properties.name_rus}</Tooltip>*/}\n          </GeoJSON>)\n        }\n      }\n        )}\n      </FeatureGroup>\n    );\n  }\n\n  componentDidMount() {\n    if (this.props.url) {\n      this.fetchData(this.props.url);\n    }\n    this.setState({\n      status_date: this.props.id,\n    });\n    //console.log(this.props);\n  }\n\n  componentWillUnmount() {\n    console.log('will unmount');\n\n  }\n\n  fetchData(url) {\n    let request = fetch(url)\n\n    request\n      .then(r => r.json())\n      .then(data => {\n        this.setState({\n          data: data.features,\n        });\n      }, (error) => {\n        console.error(error);\n      });\n  }\n}","/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/Icon_black.jsx",[],"/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/Icon_blue.jsx",[],"/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/Icon.jsx",[],"/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/Icon_red.jsx",[],"/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/Cards/Radar/radarActions/changeCenter.ts",[],"/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/TEST/actionTest/actionStatus_Date.ts",[],"/Users/valeriabelousova/work/afganistan_map/src/components/Toolbox/Tools/toolAction/actionTool.ts",[],{"ruleId":"150","severity":1,"message":"151","line":6,"column":1,"nodeType":"152","messageId":"153","endLine":18,"endColumn":6},{"ruleId":"150","severity":1,"message":"151","line":31,"column":1,"nodeType":"152","messageId":"153","endLine":64,"endColumn":4},{"ruleId":"154","severity":1,"message":"155","line":4,"column":3,"nodeType":"156","messageId":"157","endLine":4,"endColumn":12},{"ruleId":"154","severity":1,"message":"158","line":9,"column":3,"nodeType":"156","messageId":"157","endLine":9,"endColumn":13},{"ruleId":"154","severity":1,"message":"159","line":10,"column":3,"nodeType":"156","messageId":"157","endLine":10,"endColumn":9},{"ruleId":"154","severity":1,"message":"160","line":11,"column":3,"nodeType":"156","messageId":"157","endLine":11,"endColumn":7},{"ruleId":"154","severity":1,"message":"161","line":15,"column":10,"nodeType":"156","messageId":"157","endLine":15,"endColumn":21},{"ruleId":"154","severity":1,"message":"162","line":16,"column":10,"nodeType":"156","messageId":"157","endLine":16,"endColumn":21},{"ruleId":"154","severity":1,"message":"163","line":22,"column":8,"nodeType":"156","messageId":"157","endLine":22,"endColumn":20},{"ruleId":"154","severity":1,"message":"164","line":24,"column":8,"nodeType":"156","messageId":"157","endLine":24,"endColumn":28},{"ruleId":"154","severity":1,"message":"165","line":27,"column":10,"nodeType":"156","messageId":"157","endLine":27,"endColumn":16},{"ruleId":"150","severity":1,"message":"166","line":40,"column":3,"nodeType":"152","messageId":"167","endLine":45,"endColumn":4},{"ruleId":"168","severity":1,"message":"169","line":41,"column":31,"nodeType":"170","messageId":"171","endLine":41,"endColumn":33},{"ruleId":"154","severity":1,"message":"172","line":49,"column":9,"nodeType":"156","messageId":"157","endLine":49,"endColumn":15},{"ruleId":"154","severity":1,"message":"173","line":51,"column":9,"nodeType":"156","messageId":"157","endLine":51,"endColumn":22},{"ruleId":"174","severity":1,"message":"175","line":55,"column":16,"nodeType":"176","messageId":"177","endLine":55,"endColumn":18},{"ruleId":"154","severity":1,"message":"178","line":82,"column":9,"nodeType":"156","messageId":"157","endLine":82,"endColumn":19},{"ruleId":"168","severity":1,"message":"179","line":98,"column":34,"nodeType":"170","messageId":"180","endLine":98,"endColumn":36},{"ruleId":"150","severity":1,"message":"166","line":99,"column":9,"nodeType":"152","messageId":"167","endLine":101,"endColumn":10},{"ruleId":"174","severity":1,"message":"181","line":105,"column":25,"nodeType":"176","messageId":"177","endLine":105,"endColumn":27},{"ruleId":"182","severity":1,"message":"183","line":109,"column":15,"nodeType":"184","messageId":"185","endLine":113,"endColumn":17},{"ruleId":"174","severity":1,"message":"181","line":127,"column":25,"nodeType":"176","messageId":"177","endLine":127,"endColumn":27},{"ruleId":"182","severity":1,"message":"183","line":131,"column":15,"nodeType":"184","messageId":"185","endLine":135,"endColumn":17},{"ruleId":"174","severity":1,"message":"181","line":148,"column":32,"nodeType":"176","messageId":"177","endLine":148,"endColumn":34},{"ruleId":"182","severity":1,"message":"183","line":152,"column":15,"nodeType":"184","messageId":"185","endLine":156,"endColumn":17},{"ruleId":"174","severity":1,"message":"181","line":169,"column":32,"nodeType":"176","messageId":"177","endLine":169,"endColumn":34},{"ruleId":"182","severity":1,"message":"183","line":172,"column":15,"nodeType":"184","messageId":"185","endLine":176,"endColumn":17},{"ruleId":"174","severity":1,"message":"181","line":210,"column":32,"nodeType":"176","messageId":"177","endLine":210,"endColumn":34},{"ruleId":"182","severity":1,"message":"183","line":213,"column":15,"nodeType":"184","messageId":"185","endLine":217,"endColumn":17},{"ruleId":"174","severity":1,"message":"181","line":226,"column":32,"nodeType":"176","messageId":"177","endLine":226,"endColumn":34},{"ruleId":"182","severity":1,"message":"183","line":229,"column":15,"nodeType":"184","messageId":"185","endLine":233,"endColumn":17},{"ruleId":"150","severity":1,"message":"166","line":249,"column":9,"nodeType":"152","messageId":"167","endLine":251,"endColumn":10},{"ruleId":"154","severity":1,"message":"186","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":19},{"ruleId":"154","severity":1,"message":"187","line":9,"column":12,"nodeType":"156","messageId":"157","endLine":9,"endColumn":19},{"ruleId":"154","severity":1,"message":"188","line":9,"column":21,"nodeType":"156","messageId":"157","endLine":9,"endColumn":31},{"ruleId":"182","severity":1,"message":"189","line":13,"column":13,"nodeType":"184","messageId":"185","endLine":13,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":125,"column":1,"nodeType":"192","endLine":504,"endColumn":2},{"ruleId":"154","severity":1,"message":"193","line":1,"column":16,"nodeType":"156","messageId":"157","endLine":1,"endColumn":24},{"ruleId":"154","severity":1,"message":"194","line":2,"column":9,"nodeType":"156","messageId":"157","endLine":2,"endColumn":15},{"ruleId":"154","severity":1,"message":"186","line":2,"column":17,"nodeType":"156","messageId":"157","endLine":2,"endColumn":26},{"ruleId":"154","severity":1,"message":"195","line":2,"column":34,"nodeType":"156","messageId":"157","endLine":2,"endColumn":38},{"ruleId":"154","severity":1,"message":"196","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":25},{"ruleId":"154","severity":1,"message":"197","line":7,"column":10,"nodeType":"156","messageId":"157","endLine":7,"endColumn":20},{"ruleId":"174","severity":1,"message":"181","line":20,"column":25,"nodeType":"176","messageId":"177","endLine":20,"endColumn":27},{"ruleId":"174","severity":1,"message":"181","line":24,"column":30,"nodeType":"176","messageId":"177","endLine":24,"endColumn":32},{"ruleId":"174","severity":1,"message":"181","line":28,"column":30,"nodeType":"176","messageId":"177","endLine":28,"endColumn":32},{"ruleId":"174","severity":1,"message":"181","line":32,"column":30,"nodeType":"176","messageId":"177","endLine":32,"endColumn":32},{"ruleId":"174","severity":1,"message":"181","line":36,"column":30,"nodeType":"176","messageId":"177","endLine":36,"endColumn":32},{"ruleId":"174","severity":1,"message":"181","line":36,"column":61,"nodeType":"176","messageId":"177","endLine":36,"endColumn":63},{"ruleId":"168","severity":1,"message":"179","line":53,"column":72,"nodeType":"170","messageId":"180","endLine":53,"endColumn":74},{"ruleId":"174","severity":1,"message":"181","line":57,"column":69,"nodeType":"176","messageId":"177","endLine":57,"endColumn":71},{"ruleId":"168","severity":1,"message":"179","line":63,"column":72,"nodeType":"170","messageId":"180","endLine":63,"endColumn":74},{"ruleId":"174","severity":1,"message":"181","line":67,"column":69,"nodeType":"176","messageId":"177","endLine":67,"endColumn":71},{"ruleId":"168","severity":1,"message":"179","line":73,"column":72,"nodeType":"170","messageId":"180","endLine":73,"endColumn":74},{"ruleId":"174","severity":1,"message":"181","line":77,"column":69,"nodeType":"176","messageId":"177","endLine":77,"endColumn":71},{"ruleId":"168","severity":1,"message":"179","line":83,"column":72,"nodeType":"170","messageId":"180","endLine":83,"endColumn":74},{"ruleId":"174","severity":1,"message":"181","line":87,"column":69,"nodeType":"176","messageId":"177","endLine":87,"endColumn":71},{"ruleId":"168","severity":1,"message":"179","line":93,"column":72,"nodeType":"170","messageId":"180","endLine":93,"endColumn":74},{"ruleId":"174","severity":1,"message":"181","line":97,"column":69,"nodeType":"176","messageId":"177","endLine":97,"endColumn":71},{"ruleId":"198","severity":1,"message":"159","line":4,"column":10,"nodeType":"156","messageId":"157","endLine":4,"endColumn":16},{"ruleId":"198","severity":1,"message":"199","line":4,"column":18,"nodeType":"156","messageId":"157","endLine":4,"endColumn":25},{"ruleId":"168","severity":1,"message":"179","line":43,"column":32,"nodeType":"170","messageId":"180","endLine":43,"endColumn":34},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","@typescript-eslint/no-unused-vars","'TileLayer' is defined but never used.","Identifier","unusedVar","'SVGOverlay' is defined but never used.","'Circle' is defined but never used.","'Pane' is defined but never used.","'LatLngTuple' is defined but never used.","'EditControl' is defined but never used.","'GeojsonLayer' is defined but never used.","'Afganistan_Layer_Poi' is defined but never used.","'idText' is defined but never used.","Nested block is redundant.","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'mapRef' is assigned a value but never used.","'purpleOptions' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'baselayers' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","Expected '===' and instead saw '=='.","react/jsx-pascal-case","Imported JSX component Afganistan_Layer must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'Accordion' is defined but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","Imported JSX component Afganistan_Timeline must be in PascalCase or SCREAMING_SNAKE_CASE","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useState' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'SpinnerForLoading' is defined but never used.","'pushButton' is defined but never used.","no-unused-vars","'Tooltip' is defined but never used."]